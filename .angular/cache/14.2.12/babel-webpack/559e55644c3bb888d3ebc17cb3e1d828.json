{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { APP_BOOTSTRAP_LISTENER, PLATFORM_ID, NgModule, Injectable, InjectionToken, Inject, inject, NgZone, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { Subject, BehaviorSubject, Observable, merge, asapScheduler, of, fromEvent } from 'rxjs';\nimport { filter, debounceTime, map, switchMap, takeUntil, take, tap } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * Generated from: core/browser-provider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n * @param {?} _document\n * @param {?} platformId\n * @return {?}\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nfunction removeStyles(_document, platformId) {\n  return (\n    /**\n    * @return {?}\n    */\n    () => {\n      if (isPlatformBrowser(platformId)) {\n        /** @type {?} */\n        const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`)); // RegExp constructor should only be used if passing a variable to the constructor.\n        // When using static regular expression it is more performant to use reg exp literal.\n        // This is also needed to provide Safari 9 compatibility, please see\n        // https://stackoverflow.com/questions/37919802 for more discussion.\n\n        /** @type {?} */\n\n        const classRegex = /\\bflex-layout-.+?\\b/g;\n        elements.forEach(\n        /**\n        * @param {?} el\n        * @return {?}\n        */\n        el => {\n          el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ? el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n        });\n      }\n    }\n  );\n}\n/**\n *  Provider to remove SSR styles on the browser\n * @type {?}\n */\n\n\nconst BROWSER_PROVIDER = {\n  provide:\n  /** @type {?} */\n  APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n/** @type {?} */\n\nconst CLASS_NAME = 'flex-layout-';\n/**\n * @fileoverview added by tsickle\n * Generated from: core/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * *****************************************************************\n * Define module for common Angular Layout utilities\n * *****************************************************************\n */\n\nclass CoreModule {}\n\nCoreModule.ɵfac = function CoreModule_Factory(t) {\n  return new (t || CoreModule)();\n};\n\nCoreModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: CoreModule\n});\nCoreModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [BROWSER_PROVIDER]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CoreModule, [{\n    type: NgModule,\n    args: [{\n      providers: [BROWSER_PROVIDER]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-change.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\n\n\nclass MediaChange {\n  /**\n   * @param {?=} matches whether the mediaQuery is currently activated\n   * @param {?=} mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param {?=} mqAlias e.g. gt-sm, md, gt-lg\n   * @param {?=} suffix e.g. GtSM, Md, GtLg\n   * @param {?=} priority the priority of activation for the given breakpoint\n   */\n  constructor(matches = false, mediaQuery = 'all', mqAlias = '', suffix = '', priority = 0) {\n    this.matches = matches;\n    this.mediaQuery = mediaQuery;\n    this.mqAlias = mqAlias;\n    this.suffix = suffix;\n    this.priority = priority;\n    this.property = '';\n  }\n  /**\n   * Create an exact copy of the MediaChange\n   * @return {?}\n   */\n\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/stylesheet-map/stylesheet-map.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n\n\nclass StylesheetMap {\n  constructor() {\n    this.stylesheet = new Map();\n  }\n  /**\n   * Add an individual style to an HTML element\n   * @param {?} element\n   * @param {?} style\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  addStyleToElement(element, style, value) {\n    /** @type {?} */\n    const stylesheet = this.stylesheet.get(element);\n\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n  /**\n   * Clear the virtual stylesheet\n   * @return {?}\n   */\n\n\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n  /**\n   * Retrieve a given style for an HTML element\n   * @param {?} el\n   * @param {?} styleName\n   * @return {?}\n   */\n\n\n  getStyleForElement(el, styleName) {\n    /** @type {?} */\n    const styles = this.stylesheet.get(el);\n    /** @type {?} */\n\n    let value = '';\n\n    if (styles) {\n      /** @type {?} */\n      const style = styles.get(styleName);\n\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n\n    return value;\n  }\n\n}\n\nStylesheetMap.ɵfac = function StylesheetMap_Factory(t) {\n  return new (t || StylesheetMap)();\n};\n/** @nocollapse */\n\n\nStylesheetMap.ɵprov = ɵɵdefineInjectable({\n  factory: function StylesheetMap_Factory() {\n    return new StylesheetMap();\n  },\n  token: StylesheetMap,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StylesheetMap, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: core/stylesheet-map/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/library-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst DEFAULT_CONFIG = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: []\n};\n/** @type {?} */\n\nconst LAYOUT_CONFIG = new InjectionToken('Flex Layout token, config options for the library', {\n  providedIn: 'root',\n  factory:\n  /**\n  * @return {?}\n  */\n  () => DEFAULT_CONFIG\n});\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/server-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n * @type {?}\n */\n\nconst SERVER_TOKEN = new InjectionToken('FlexLayoutServerLoaded', {\n  providedIn: 'root',\n  factory:\n  /**\n  * @return {?}\n  */\n  () => false\n});\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/breakpoint-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nconst BREAKPOINT = new InjectionToken('Flex Layout token, collect all breakpoints into one provider', {\n  providedIn: 'root',\n  factory:\n  /**\n  * @return {?}\n  */\n  () => null\n});\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/add-alias.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\n\nfunction mergeAlias(dest, source) {\n  dest = dest ? dest.clone() : new MediaChange();\n\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix =\n    /** @type {?} */\n    source.suffix;\n    dest.priority =\n    /** @type {?} */\n    source.priority;\n  }\n\n  return dest;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/layout-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\n\n\nconst INLINE = 'inline';\n/** @type {?} */\n\nconst LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n * @param {?} value\n * @return {?}\n */\n\nfunction buildLayoutCSS(value) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n}\n/**\n * Validate the value to be one of the acceptable value options\n * Use default fallback of 'row'\n * @param {?} value\n * @return {?}\n */\n\n\nfunction validateValue(value) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' '); // First value must be the `flex-direction`\n\n  if (!LAYOUT_VALUES.find(\n  /**\n  * @param {?} x\n  * @return {?}\n  */\n  x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = inline !== INLINE ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n * @param {?} value\n * @return {?}\n */\n\n\nfunction validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n      // All other values fallback to 'wrap'\n\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n\n  return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n * @param {?} direction\n * @param {?=} wrap\n * @param {?=} inline\n * @return {?}\n */\n\n\nfunction buildCSS(direction, wrap = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/base/base2.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @abstract\n */\n\n\nclass BaseDirective2 {\n  /**\n   * @protected\n   * @param {?} elementRef\n   * @param {?} styleBuilder\n   * @param {?} styler\n   * @param {?} marshal\n   */\n  constructor(elementRef, styleBuilder, styler, marshal) {\n    this.elementRef = elementRef;\n    this.styleBuilder = styleBuilder;\n    this.styler = styler;\n    this.marshal = marshal;\n    this.DIRECTIVE_KEY = '';\n    this.inputs = [];\n    /**\n     * The most recently used styles for the builder\n     */\n\n    this.mru = {};\n    this.destroySubject = new Subject();\n    /**\n     * Cache map for style computation\n     */\n\n    this.styleCache = new Map();\n  }\n  /**\n   * Access to host element's parent DOM node\n   * @protected\n   * @return {?}\n   */\n\n\n  get parentElement() {\n    return this.elementRef.nativeElement.parentElement;\n  }\n  /**\n   * Access to the HTMLElement for the directive\n   * @protected\n   * @return {?}\n   */\n\n\n  get nativeElement() {\n    return this.elementRef.nativeElement;\n  }\n  /**\n   * Access to the activated value for the directive\n   * @return {?}\n   */\n\n\n  get activatedValue() {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set activatedValue(value) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value, this.marshal.activatedAlias);\n  }\n  /**\n   * For \\@Input changes\n   * @param {?} changes\n   * @return {?}\n   */\n\n\n  ngOnChanges(changes) {\n    Object.keys(changes).forEach(\n    /**\n    * @param {?} key\n    * @return {?}\n    */\n    key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        /** @type {?} */\n        const bp = key.split('.').slice(1).join('.');\n        /** @type {?} */\n\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n  /**\n   * Register with central marshaller service\n   * @protected\n   * @param {?=} extraTriggers\n   * @return {?}\n   */\n\n\n  init(extraTriggers = []) {\n    this.marshal.init(this.elementRef.nativeElement, this.DIRECTIVE_KEY, this.updateWithValue.bind(this), this.clearStyles.bind(this), extraTriggers);\n  }\n  /**\n   * Add styles to the element using predefined style builder\n   * @protected\n   * @param {?} input\n   * @param {?=} parent\n   * @return {?}\n   */\n\n\n  addStyles(input, parent) {\n    /** @type {?} */\n    const builder = this.styleBuilder;\n    /** @type {?} */\n\n    const useCache = builder.shouldCache;\n    /** @type {?} */\n\n    let genStyles = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = Object.assign({}, genStyles);\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n  /**\n   * Remove generated styles from an element using predefined style builder\n   * @protected\n   * @return {?}\n   */\n\n\n  clearStyles() {\n    Object.keys(this.mru).forEach(\n    /**\n    * @param {?} k\n    * @return {?}\n    */\n    k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n  /**\n   * Force trigger style updates on DOM element\n   * @protected\n   * @return {?}\n   */\n\n\n  triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   * @protected\n   * @param {?} target\n   * @param {?=} addIfMissing\n   * @return {?}\n   */\n\n\n  getFlexFlowDirection(target, addIfMissing = false) {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        /** @type {?} */\n        const style = buildLayoutCSS(value);\n        /** @type {?} */\n\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n  /**\n   * @protected\n   * @param {?} target\n   * @return {?}\n   */\n\n\n  hasWrap(target) {\n    return this.styler.hasWrap(target);\n  }\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   * @protected\n   * @param {?} style\n   * @param {?=} value\n   * @param {?=} element\n   * @return {?}\n   */\n\n\n  applyStyleToElement(style, value, element = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n  /**\n   * @protected\n   * @param {?} val\n   * @param {?} bp\n   * @return {?}\n   */\n\n\n  setValue(val, bp) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n  /**\n   * @protected\n   * @param {?} input\n   * @return {?}\n   */\n\n\n  updateWithValue(input) {\n    if (this.currentValue !== input) {\n      this.addStyles(input);\n      this.currentValue = input;\n    }\n  }\n\n}\n\nBaseDirective2.ɵfac = function BaseDirective2_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nBaseDirective2.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: BaseDirective2,\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/**\n * @fileoverview added by tsickle\n * Generated from: core/base/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/data/break-points.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n * @type {?}\n */\n\nconst DEFAULT_BREAKPOINTS = [{\n  alias: 'xs',\n  mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.98px)',\n  priority: 1000\n}, {\n  alias: 'sm',\n  mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.98px)',\n  priority: 900\n}, {\n  alias: 'md',\n  mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.98px)',\n  priority: 800\n}, {\n  alias: 'lg',\n  mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.98px)',\n  priority: 700\n}, {\n  alias: 'xl',\n  mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.98px)',\n  priority: 600\n}, {\n  alias: 'lt-sm',\n  overlapping: true,\n  mediaQuery: 'screen and (max-width: 599.98px)',\n  priority: 950\n}, {\n  alias: 'lt-md',\n  overlapping: true,\n  mediaQuery: 'screen and (max-width: 959.98px)',\n  priority: 850\n}, {\n  alias: 'lt-lg',\n  overlapping: true,\n  mediaQuery: 'screen and (max-width: 1279.98px)',\n  priority: 750\n}, {\n  alias: 'lt-xl',\n  overlapping: true,\n  priority: 650,\n  mediaQuery: 'screen and (max-width: 1919.98px)'\n}, {\n  alias: 'gt-xs',\n  overlapping: true,\n  mediaQuery: 'screen and (min-width: 600px)',\n  priority: -950\n}, {\n  alias: 'gt-sm',\n  overlapping: true,\n  mediaQuery: 'screen and (min-width: 960px)',\n  priority: -850\n}, {\n  alias: 'gt-md',\n  overlapping: true,\n  mediaQuery: 'screen and (min-width: 1280px)',\n  priority: -750\n}, {\n  alias: 'gt-lg',\n  overlapping: true,\n  mediaQuery: 'screen and (min-width: 1920px)',\n  priority: -650\n}];\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/data/orientation-break-points.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/* tslint:disable */\n\n/** @type {?} */\n\nconst HANDSET_PORTRAIT = '(orientation: portrait) and (max-width: 599.98px)';\n/** @type {?} */\n\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.98px)';\n/** @type {?} */\n\nconst TABLET_PORTRAIT = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)';\n/** @type {?} */\n\nconst TABLET_LANDSCAPE = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)';\n/** @type {?} */\n\nconst WEB_PORTRAIT = '(orientation: portrait) and (min-width: 840px)';\n/** @type {?} */\n\nconst WEB_LANDSCAPE = '(orientation: landscape) and (min-width: 1280px)';\n/** @type {?} */\n\nconst ScreenTypes = {\n  'HANDSET': `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET': `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB': `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n  'HANDSET_PORTRAIT': `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT': `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT': `${WEB_PORTRAIT}`,\n  'HANDSET_LANDSCAPE': `${HANDSET_LANDSCAPE}`,\n  'TABLET_LANDSCAPE': `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE': `${WEB_LANDSCAPE}`\n};\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n * @type {?}\n */\n\nconst ORIENTATION_BREAKPOINTS = [{\n  'alias': 'handset',\n  priority: 2000,\n  'mediaQuery': ScreenTypes.HANDSET\n}, {\n  'alias': 'handset.landscape',\n  priority: 2000,\n  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE\n}, {\n  'alias': 'handset.portrait',\n  priority: 2000,\n  'mediaQuery': ScreenTypes.HANDSET_PORTRAIT\n}, {\n  'alias': 'tablet',\n  priority: 2100,\n  'mediaQuery': ScreenTypes.TABLET\n}, {\n  'alias': 'tablet.landscape',\n  priority: 2100,\n  'mediaQuery': ScreenTypes.TABLET_LANDSCAPE\n}, {\n  'alias': 'tablet.portrait',\n  priority: 2100,\n  'mediaQuery': ScreenTypes.TABLET_PORTRAIT\n}, {\n  'alias': 'web',\n  priority: 2200,\n  'mediaQuery': ScreenTypes.WEB,\n  overlapping: true\n}, {\n  'alias': 'web.landscape',\n  priority: 2200,\n  'mediaQuery': ScreenTypes.WEB_LANDSCAPE,\n  overlapping: true\n}, {\n  'alias': 'web.portrait',\n  priority: 2200,\n  'mediaQuery': ScreenTypes.WEB_PORTRAIT,\n  overlapping: true\n}];\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/break-point.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/object-extend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\n\nfunction extendObject(dest, ...sources) {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/breakpoint-tools.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\n/**\n * @param {?} part\n * @return {?}\n */\n\nfunction firstUpperCase(part) {\n  /** @type {?} */\n  let first = part.length > 0 ? part.charAt(0) : '';\n  /** @type {?} */\n\n  let remainder = part.length > 1 ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n/**\n * Converts snake-case to SnakeCase.\n * @param {?} name Text to UpperCamelCase\n * @return {?}\n */\n\n\nfunction camelCase(name) {\n  return name.replace(ALIAS_DELIMITERS, '|').split('|').map(firstUpperCase).join('');\n}\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n * @param {?} list\n * @return {?}\n */\n\n\nfunction validateSuffixes(list) {\n  list.forEach(\n  /**\n  * @param {?} bp\n  * @return {?}\n  */\n  bp => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias); // create Suffix value based on alias\n\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n * @param {?} defaults\n * @param {?=} custom\n * @return {?}\n */\n\n\nfunction mergeByAlias(defaults, custom = []) {\n  /** @type {?} */\n  const dict = {};\n  defaults.forEach(\n  /**\n  * @param {?} bp\n  * @return {?}\n  */\n  bp => {\n    dict[bp.alias] = bp;\n  }); // Merge custom breakpoints\n\n  custom.forEach(\n  /**\n  * @param {?} bp\n  * @return {?}\n  */\n  bp => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n  return validateSuffixes(Object.keys(dict).map(\n  /**\n  * @param {?} k\n  * @return {?}\n  */\n  k => dict[k]));\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/break-points-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n * @type {?}\n */\n\n\nconst BREAKPOINTS = new InjectionToken('Token (@angular/flex-layout) Breakpoints', {\n  providedIn: 'root',\n  factory:\n  /**\n  * @return {?}\n  */\n  () => {\n    /** @type {?} */\n    const breakpoints = inject(BREAKPOINT);\n    /** @type {?} */\n\n    const layoutConfig = inject(LAYOUT_CONFIG);\n    /** @type {?} */\n\n    const bpFlattenArray = [].concat.apply([], (breakpoints || []).map(\n    /**\n    * @param {?} v\n    * @return {?}\n    */\n    v => Array.isArray(v) ? v : [v]));\n    /** @type {?} */\n\n    const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS).concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n    return mergeByAlias(builtIns, bpFlattenArray);\n  }\n});\n/**\n * @fileoverview added by tsickle\n * Generated from: core/utils/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * HOF to sort the breakpoints by descending priority\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\n\nfunction sortDescendingPriority(a, b) {\n  /** @type {?} */\n  const priorityA = a ? a.priority || 0 : 0;\n  /** @type {?} */\n\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n/**\n * HOF to sort the breakpoints by ascending priority\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\n\n\nfunction sortAscendingPriority(a, b) {\n  /** @type {?} */\n  const pA = a.priority || 0;\n  /** @type {?} */\n\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/break-point-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n\n\nclass BreakPointRegistry {\n  /**\n   * @param {?} list\n   */\n  constructor(list) {\n    /**\n     * Memoized BreakPoint Lookups\n     */\n    this.findByMap = new Map();\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   * @param {?} alias\n   * @return {?}\n   */\n\n\n  findByAlias(alias) {\n    return !alias ? null : this.findWithPredicate(alias,\n    /**\n    * @param {?} bp\n    * @return {?}\n    */\n    bp => bp.alias == alias);\n  }\n  /**\n   * @param {?} query\n   * @return {?}\n   */\n\n\n  findByQuery(query) {\n    return this.findWithPredicate(query,\n    /**\n    * @param {?} bp\n    * @return {?}\n    */\n    bp => bp.mediaQuery == query);\n  }\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   * @return {?}\n   */\n\n\n  get overlappings() {\n    return this.items.filter(\n    /**\n    * @param {?} it\n    * @return {?}\n    */\n    it => it.overlapping == true);\n  }\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   * @return {?}\n   */\n\n\n  get aliases() {\n    return this.items.map(\n    /**\n    * @param {?} it\n    * @return {?}\n    */\n    it => it.alias);\n  }\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   * @return {?}\n   */\n\n\n  get suffixes() {\n    return this.items.map(\n    /**\n    * @param {?} it\n    * @return {?}\n    */\n    it => !!it.suffix ? it.suffix : '');\n  }\n  /**\n   * Memoized lookup using custom predicate function\n   * @private\n   * @param {?} key\n   * @param {?} searchFn\n   * @return {?}\n   */\n\n\n  findWithPredicate(key, searchFn) {\n    /** @type {?} */\n    let response = this.findByMap.get(key);\n\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n\n    return response || null;\n  }\n\n}\n\nBreakPointRegistry.ɵfac = function BreakPointRegistry_Factory(t) {\n  return new (t || BreakPointRegistry)(ɵngcc0.ɵɵinject(BREAKPOINTS));\n};\n/** @nocollapse */\n\n\nBreakPointRegistry.ɵprov = ɵɵdefineInjectable({\n  factory: function BreakPointRegistry_Factory() {\n    return new BreakPointRegistry(ɵɵinject(BREAKPOINTS));\n  },\n  token: BreakPointRegistry,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nBreakPointRegistry.ctorParameters = () => [{\n  type: Array,\n  decorators: [{\n    type: Inject,\n    args: [BREAKPOINTS]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakPointRegistry, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [BREAKPOINTS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/match-media/match-media.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n\n\nclass MatchMedia {\n  /**\n   * @param {?} _zone\n   * @param {?} _platformId\n   * @param {?} _document\n   */\n  constructor(_zone, _platformId, _document) {\n    this._zone = _zone;\n    this._platformId = _platformId;\n    this._document = _document;\n    /**\n     * Initialize source with 'all' so all non-responsive APIs trigger style updates\n     */\n\n    this.source = new BehaviorSubject(new MediaChange(true));\n    this.registry = new Map();\n    this.pendingRemoveListenerFns = [];\n    this._observable$ = this.source.asObservable();\n  }\n  /**\n   * Publish list of all current activations\n   * @return {?}\n   */\n\n\n  get activations() {\n    /** @type {?} */\n    const results = [];\n    this.registry.forEach(\n    /**\n    * @param {?} mql\n    * @param {?} key\n    * @return {?}\n    */\n    (mql, key) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n  /**\n   * For the specified mediaQuery?\n   * @param {?} mediaQuery\n   * @return {?}\n   */\n\n\n  isActive(mediaQuery) {\n    /** @type {?} */\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : this.registerQuery(mediaQuery).some(\n    /**\n    * @param {?} m\n    * @return {?}\n    */\n    m => m.matches);\n  }\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   * @param {?=} mqList\n   * @param {?=} filterOthers\n   * @return {?}\n   */\n\n\n  observe(mqList, filterOthers = false) {\n    if (mqList && mqList.length) {\n      /** @type {?} */\n      const matchMedia$ = this._observable$.pipe(filter(\n      /**\n      * @param {?} change\n      * @return {?}\n      */\n      change => !filterOthers ? true : mqList.indexOf(change.mediaQuery) > -1));\n      /** @type {?} */\n\n\n      const registration$ = new Observable(\n      /**\n      * @param {?} observer\n      * @return {?}\n      */\n      observer => {\n        // tslint:disable-line:max-line-length\n\n        /** @type {?} */\n        const matches = this.registerQuery(mqList);\n\n        if (matches.length) {\n          /** @type {?} */\n          const lastChange =\n          /** @type {?} */\n          matches.pop();\n          matches.forEach(\n          /**\n          * @param {?} e\n          * @return {?}\n          */\n          e => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   * @param {?} mediaQuery\n   * @return {?}\n   */\n\n\n  registerQuery(mediaQuery) {\n    /** @type {?} */\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    /** @type {?} */\n\n    const matches = [];\n    buildQueryCss(list, this._document);\n    list.forEach(\n    /**\n    * @param {?} query\n    * @return {?}\n    */\n    query => {\n      /** @type {?} */\n      const onMQLEvent =\n      /**\n      * @param {?} e\n      * @return {?}\n      */\n      e => {\n        this._zone.run(\n        /**\n        * @return {?}\n        */\n        () => this.source.next(new MediaChange(e.matches, query)));\n      };\n      /** @type {?} */\n\n\n      let mql = this.registry.get(query);\n\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.pendingRemoveListenerFns.push(\n        /**\n        * @return {?}\n        */\n        () =>\n        /** @type {?} */\n        mql.removeListener(onMQLEvent));\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n    return matches;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    /** @type {?} */\n    let fn;\n\n    while (fn = this.pendingRemoveListenerFns.pop()) {\n      fn();\n    }\n  }\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   * @protected\n   * @param {?} query\n   * @return {?}\n   */\n\n\n  buildMQL(query) {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n}\n\nMatchMedia.ɵfac = function MatchMedia_Factory(t) {\n  return new (t || MatchMedia)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(DOCUMENT));\n};\n/** @nocollapse */\n\n\nMatchMedia.ɵprov = ɵɵdefineInjectable({\n  factory: function MatchMedia_Factory() {\n    return new MatchMedia(ɵɵinject(NgZone), ɵɵinject(PLATFORM_ID), ɵɵinject(DOCUMENT));\n  },\n  token: MatchMedia,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nMatchMedia.ctorParameters = () => [{\n  type: NgZone\n}, {\n  type: Object,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatchMedia, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n * @type {?}\n */\n\n\nconst ALL_STYLES = {};\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param {?} mediaQueries\n * @param {?} _document\n * @return {?}\n */\n\nfunction buildQueryCss(mediaQueries, _document) {\n  /** @type {?} */\n  const list = mediaQueries.filter(\n  /**\n  * @param {?} it\n  * @return {?}\n  */\n  it => !ALL_STYLES[it]);\n\n  if (list.length > 0) {\n    /** @type {?} */\n    const query = list.join(', ');\n\n    try {\n      /** @type {?} */\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n\n      if (!\n      /** @type {?} */\n      styleEl.styleSheet) {\n        /** @type {?} */\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      /** @type {?} */\n      _document.head.appendChild(styleEl); // Store in private global registry\n\n\n      list.forEach(\n      /**\n      * @param {?} mq\n      * @return {?}\n      */\n      mq => ALL_STYLES[mq] = styleEl);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n/**\n * @param {?} query\n * @param {?} isBrowser\n * @return {?}\n */\n\n\nfunction constructMql(query, isBrowser) {\n  /** @type {?} */\n  const canListen = isBrowser && !!\n  /** @type {?} */\n  window.matchMedia('all').addListener;\n  return canListen ?\n  /** @type {?} */\n  window.matchMedia(query) :\n  /** @type {?} */\n  {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener:\n    /**\n    * @return {?}\n    */\n    () => {},\n    removeListener:\n    /**\n    * @return {?}\n    */\n    () => {},\n    onchange: null,\n\n    /**\n     * @return {?}\n     */\n    addEventListener() {},\n\n    /**\n     * @return {?}\n     */\n    removeEventListener() {},\n\n    /**\n     * @return {?}\n     */\n    dispatchEvent() {\n      return false;\n    }\n\n  };\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/match-media/mock/mock-match-media.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n\n\nclass MockMatchMedia extends MatchMedia {\n  // Allow fallback to overlapping mediaQueries\n\n  /**\n   * @param {?} _zone\n   * @param {?} _platformId\n   * @param {?} _document\n   * @param {?} _breakpoints\n   */\n  constructor(_zone, _platformId, _document, _breakpoints) {\n    super(_zone, _platformId, _document);\n    this._breakpoints = _breakpoints;\n    this.autoRegisterQueries = true; // Used for testing BreakPoint registrations\n    // Used for testing BreakPoint registrations\n\n    this.useOverlaps = false; // Allow fallback to overlapping mediaQueries\n  }\n  /**\n   * Easy method to clear all listeners for all mediaQueries\n   * @return {?}\n   */\n\n\n  clearAll() {\n    this.registry.forEach(\n    /**\n    * @param {?} mql\n    * @return {?}\n    */\n    mql => {\n      /** @type {?} */\n      mql.destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n  /**\n   * Feature to support manual, simulated activation of a mediaQuery.\n   * @param {?} mediaQuery\n   * @param {?=} useOverlaps\n   * @return {?}\n   */\n\n\n  activate(mediaQuery, useOverlaps = false) {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n  /**\n   * Converts an optional mediaQuery alias to a specific, valid mediaQuery\n   * @param {?} queryOrAlias\n   * @return {?}\n   */\n\n\n  _validateQuery(queryOrAlias) {\n    /** @type {?} */\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n\n    return bp && bp.mediaQuery || queryOrAlias;\n  }\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   * @private\n   * @param {?} mediaQuery\n   * @param {?} useOverlaps\n   * @return {?}\n   */\n\n\n  _activateWithOverlaps(mediaQuery, useOverlaps) {\n    if (useOverlaps) {\n      /** @type {?} */\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      /** @type {?} */\n\n\n      const alias = bp ? bp.alias : 'unknown'; // Simulate activation of overlapping lt-<XXX> ranges\n\n      switch (alias) {\n        case 'lg':\n          this._activateByAlias(['lt-xl']);\n\n          break;\n\n        case 'md':\n          this._activateByAlias(['lt-xl', 'lt-lg']);\n\n          break;\n\n        case 'sm':\n          this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md']);\n\n          break;\n\n        case 'xs':\n          this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md', 'lt-sm']);\n\n          break;\n      } // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n\n\n      switch (alias) {\n        case 'xl':\n          this._activateByAlias(['gt-lg', 'gt-md', 'gt-sm', 'gt-xs']);\n\n          break;\n\n        case 'lg':\n          this._activateByAlias(['gt-md', 'gt-sm', 'gt-xs']);\n\n          break;\n\n        case 'md':\n          this._activateByAlias(['gt-sm', 'gt-xs']);\n\n          break;\n\n        case 'sm':\n          this._activateByAlias(['gt-xs']);\n\n          break;\n      }\n    } // Activate last since the responsiveActivation is watching *this* mediaQuery\n\n\n    return this._activateByQuery(mediaQuery);\n  }\n  /**\n   *\n   * @private\n   * @param {?} aliases\n   * @return {?}\n   */\n\n\n  _activateByAlias(aliases) {\n    /** @type {?} */\n    const activate =\n    /**\n    * @param {?} alias\n    * @return {?}\n    */\n    alias => {\n      /** @type {?} */\n      const bp = this._breakpoints.findByAlias(alias);\n\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n\n    aliases.forEach(activate);\n  }\n  /**\n   *\n   * @private\n   * @param {?} mediaQuery\n   * @return {?}\n   */\n\n\n  _activateByQuery(mediaQuery) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this._registerMediaQuery(mediaQuery);\n    }\n    /** @type {?} */\n\n\n    const mql =\n    /** @type {?} */\n    this.registry.get(mediaQuery);\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n\n    return this.hasActivated;\n  }\n  /**\n   * Deactivate all current MQLs and reset the buffer\n   * @private\n   * @template THIS\n   * @this {THIS}\n   * @return {THIS}\n   */\n\n\n  _deactivateAll() {\n    /** @type {?} */\n    this.registry.forEach(\n    /**\n    * @param {?} it\n    * @return {?}\n    */\n    it => {\n      /** @type {?} */\n      it.deactivate();\n    });\n    return (\n      /** @type {?} */\n      this\n    );\n  }\n  /**\n   * Insure the mediaQuery is registered with MatchMedia\n   * @private\n   * @param {?} mediaQuery\n   * @return {?}\n   */\n\n\n  _registerMediaQuery(mediaQuery) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   * @protected\n   * @param {?} query\n   * @return {?}\n   */\n\n\n  buildMQL(query) {\n    return new MockMediaQueryList(query);\n  }\n  /**\n   * @protected\n   * @return {?}\n   */\n\n\n  get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\nMockMatchMedia.ɵfac = function MockMatchMedia_Factory(t) {\n  return new (t || MockMatchMedia)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(BreakPointRegistry));\n};\n\nMockMatchMedia.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: MockMatchMedia,\n  factory: MockMatchMedia.ɵfac\n});\n/** @nocollapse */\n\nMockMatchMedia.ctorParameters = () => [{\n  type: NgZone\n}, {\n  type: Object,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: BreakPointRegistry\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MockMatchMedia, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: BreakPointRegistry\n    }];\n  }, null);\n})();\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\n\n\nclass MockMediaQueryList {\n  /**\n   * @param {?} _mediaQuery\n   */\n  constructor(_mediaQuery) {\n    this._mediaQuery = _mediaQuery;\n    this._isActive = false;\n    this._listeners = [];\n    this.onchange = null;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get matches() {\n    return this._isActive;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get media() {\n    return this._mediaQuery;\n  }\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   * @return {?}\n   */\n\n\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n  /**\n   * Notify all listeners that 'matches === TRUE'\n   * @return {?}\n   */\n\n\n  activate() {\n    if (!this._isActive) {\n      this._isActive = true;\n\n      this._listeners.forEach(\n      /**\n      * @param {?} callback\n      * @return {?}\n      */\n      callback => {\n        /** @type {?} */\n        const cb =\n        /** @type {?} */\n        callback;\n        cb.call(this,\n        /** @type {?} */\n        {\n          matches: this.matches,\n          media: this.media\n        });\n      });\n    }\n\n    return this;\n  }\n  /**\n   * Notify all listeners that 'matches === false'\n   * @return {?}\n   */\n\n\n  deactivate() {\n    if (this._isActive) {\n      this._isActive = false;\n\n      this._listeners.forEach(\n      /**\n      * @param {?} callback\n      * @return {?}\n      */\n      callback => {\n        /** @type {?} */\n        const cb =\n        /** @type {?} */\n        callback;\n        cb.call(this,\n        /** @type {?} */\n        {\n          matches: this.matches,\n          media: this.media\n        });\n      });\n    }\n\n    return this;\n  }\n  /**\n   * Add a listener to our internal list to activate later\n   * @param {?} listener\n   * @return {?}\n   */\n\n\n  addListener(listener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n\n    if (this._isActive) {\n      /** @type {?} */\n      const cb =\n      /** @type {?} */\n      listener;\n      cb.call(this,\n      /** @type {?} */\n      {\n        matches: this.matches,\n        media: this.media\n      });\n    }\n  }\n  /**\n   * Don't need to remove listeners in the testing environment\n   * @param {?} _\n   * @return {?}\n   */\n\n\n  removeListener(_) {}\n  /**\n   * @param {?} _\n   * @param {?} __\n   * @param {?=} ___\n   * @return {?}\n   */\n\n\n  addEventListener(_, __, ___) {}\n  /**\n   * @param {?} _\n   * @param {?} __\n   * @param {?=} ___\n   * @return {?}\n   */\n\n\n  removeEventListener(_, __, ___) {}\n  /**\n   * @param {?} _\n   * @return {?}\n   */\n\n\n  dispatchEvent(_) {\n    return false;\n  }\n\n}\n/**\n * Pre-configured provider for MockMatchMedia\n * @type {?}\n */\n\n\nconst MockMatchMediaProvider = {\n  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n/**\n * @fileoverview added by tsickle\n * Generated from: core/match-media/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-marshaller/print-hook.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nconst PRINT = 'print';\n/** @type {?} */\n\nconst BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n\nclass PrintHook {\n  /**\n   * @param {?} breakpoints\n   * @param {?} layoutConfig\n   * @param {?} _document\n   */\n  constructor(breakpoints, layoutConfig, _document) {\n    this.breakpoints = breakpoints;\n    this.layoutConfig = layoutConfig;\n    this._document = _document; // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`\n    //  and `afterprint` event listeners.\n\n    this.registeredBeforeAfterPrintHooks = false; // isPrintingBeforeAfterEvent is used to track if we are printing from within\n    // a `beforeprint` event handler. This prevents the typicall `stopPrinting`\n    // form `interceptEvents` so that printing is not stopped while the dialog\n    // is still open. This is an extension of the `isPrinting` property on\n    // browsers which support `beforeprint` and `afterprint` events.\n\n    this.isPrintingBeforeAfterEvent = false;\n    this.beforePrintEventListeners = [];\n    this.afterPrintEventListeners = [];\n    /**\n     * Is this service currently in Print-mode ?\n     */\n\n    this.isPrinting = false;\n    this.queue = new PrintQueue();\n    this.deactivations = [];\n  }\n  /**\n   * Add 'print' mediaQuery: to listen for matchMedia activations\n   * @param {?} queries\n   * @return {?}\n   */\n\n\n  withPrintQuery(queries) {\n    return [...queries, PRINT];\n  }\n  /**\n   * Is the MediaChange event for any 'print' \\@media\n   * @param {?} e\n   * @return {?}\n   */\n\n\n  isPrintEvent(e) {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n  /**\n   * What is the desired mqAlias to use while printing?\n   * @return {?}\n   */\n\n\n  get printAlias() {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n  /**\n   * Lookup breakpoints associated with print aliases.\n   * @return {?}\n   */\n\n\n  get printBreakPoints() {\n    return (\n      /** @type {?} */\n      this.printAlias.map(\n      /**\n      * @param {?} alias\n      * @return {?}\n      */\n      alias => this.breakpoints.findByAlias(alias)).filter(\n      /**\n      * @param {?} bp\n      * @return {?}\n      */\n      bp => bp !== null)\n    );\n  }\n  /**\n   * Lookup breakpoint associated with mediaQuery\n   * @param {?} __0\n   * @return {?}\n   */\n\n\n  getEventBreakpoints({\n    mediaQuery\n  }) {\n    /** @type {?} */\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    /** @type {?} */\n\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n    return list.sort(sortDescendingPriority);\n  }\n  /**\n   * Update event with printAlias mediaQuery information\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  updateEvent(event) {\n    /** @type {?} */\n    let bp = this.breakpoints.findByQuery(event.mediaQuery);\n\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n\n    return mergeAlias(event, bp);\n  } // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can\n  // trigger print styles synchronously and apply proper layout styles.\n  // It is a noop if the hooks have already been registered or if the document's\n  // `defaultView` is not available.\n\n  /**\n   * @private\n   * @param {?} target\n   * @return {?}\n   */\n\n\n  registerBeforeAfterPrintHooks(target) {\n    // `defaultView` may be null when rendering on the server or in other contexts.\n    if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) {\n      return;\n    }\n\n    this.registeredBeforeAfterPrintHooks = true;\n    /** @type {?} */\n\n    const beforePrintListener =\n    /**\n    * @return {?}\n    */\n    () => {\n      // If we aren't already printing, start printing and update the styles as\n      // if there was a regular print `MediaChange`(from matchMedia).\n      if (!this.isPrinting) {\n        this.isPrintingBeforeAfterEvent = true;\n        this.startPrinting(target, this.getEventBreakpoints(new MediaChange(true, PRINT)));\n        target.updateStyles();\n      }\n    };\n    /** @type {?} */\n\n\n    const afterPrintListener =\n    /**\n    * @return {?}\n    */\n    () => {\n      // If we aren't already printing, start printing and update the styles as\n      // if there was a regular print `MediaChange`(from matchMedia).\n      this.isPrintingBeforeAfterEvent = false;\n\n      if (this.isPrinting) {\n        this.stopPrinting(target);\n        target.updateStyles();\n      }\n    }; // Could we have teardown logic to remove if there are no print listeners being used?\n\n\n    this._document.defaultView.addEventListener('beforeprint', beforePrintListener);\n\n    this._document.defaultView.addEventListener('afterprint', afterPrintListener);\n\n    this.beforePrintEventListeners.push(beforePrintListener);\n    this.afterPrintEventListeners.push(afterPrintListener);\n  }\n  /**\n   * Prepare RxJS filter operator with partial application\n   * @param {?} target\n   * @return {?} pipeable filter predicate\n   */\n\n\n  interceptEvents(target) {\n    this.registerBeforeAfterPrintHooks(target);\n    return (\n      /**\n      * @param {?} event\n      * @return {?}\n      */\n      event => {\n        if (this.isPrintEvent(event)) {\n          if (event.matches && !this.isPrinting) {\n            this.startPrinting(target, this.getEventBreakpoints(event));\n            target.updateStyles();\n          } else if (!event.matches && this.isPrinting && !this.isPrintingBeforeAfterEvent) {\n            this.stopPrinting(target);\n            target.updateStyles();\n          }\n        } else {\n          this.collectActivations(event);\n        }\n      }\n    );\n  }\n  /**\n   * Stop mediaChange event propagation in event streams\n   * @return {?}\n   */\n\n\n  blockPropagation() {\n    return (\n      /**\n      * @param {?} event\n      * @return {?}\n      */\n      event => {\n        return !(this.isPrinting || this.isPrintEvent(event));\n      }\n    );\n  }\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   * @protected\n   * @param {?} target\n   * @param {?} bpList\n   * @return {?}\n   */\n\n\n  startPrinting(target, bpList) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n  /**\n   * For any print de-activations, reset the entire print queue\n   * @protected\n   * @param {?} target\n   * @return {?}\n   */\n\n\n  stopPrinting(target) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is supported; so 'print' mediaQuery activations are used as a fallback\n   * in browsers without `beforeprint` support.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  collectActivations(event) {\n    if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {\n      if (!event.matches) {\n        /** @type {?} */\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n\n        if (bp) {\n          // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else if (!this.isPrintingBeforeAfterEvent) {\n        // Only clear deactivations if we aren't printing from a `beforeprint` event.\n        // Otherwise this will clear before `stopPrinting()` is called to restore\n        // the pre-Print Activations.\n        this.deactivations = [];\n      }\n    }\n  }\n  /**\n   * Teardown logic for the service.\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    if (this._document.defaultView) {\n      this.beforePrintEventListeners.forEach(\n      /**\n      * @param {?} l\n      * @return {?}\n      */\n      l => this._document.defaultView.removeEventListener('beforeprint', l));\n      this.afterPrintEventListeners.forEach(\n      /**\n      * @param {?} l\n      * @return {?}\n      */\n      l => this._document.defaultView.removeEventListener('afterprint', l));\n    }\n  }\n\n}\n\nPrintHook.ɵfac = function PrintHook_Factory(t) {\n  return new (t || PrintHook)(ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(LAYOUT_CONFIG), ɵngcc0.ɵɵinject(DOCUMENT));\n};\n/** @nocollapse */\n\n\nPrintHook.ɵprov = ɵɵdefineInjectable({\n  factory: function PrintHook_Factory() {\n    return new PrintHook(ɵɵinject(BreakPointRegistry), ɵɵinject(LAYOUT_CONFIG), ɵɵinject(DOCUMENT));\n  },\n  token: PrintHook,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nPrintHook.ctorParameters = () => [{\n  type: BreakPointRegistry\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [LAYOUT_CONFIG]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PrintHook, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: BreakPointRegistry\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_CONFIG]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})(); // ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\n\n\nclass PrintQueue {\n  constructor() {\n    /**\n     * Sorted queue with prioritized print breakpoints\n     */\n    this.printBreakpoints = [];\n  }\n  /**\n   * @param {?} bpList\n   * @return {?}\n   */\n\n\n  addPrintBreakpoints(bpList) {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(\n    /**\n    * @param {?} bp\n    * @return {?}\n    */\n    bp => this.addBreakpoint(bp));\n    return this.printBreakpoints;\n  }\n  /**\n   * Add Print breakpoint to queue\n   * @param {?} bp\n   * @return {?}\n   */\n\n\n  addBreakpoint(bp) {\n    if (!!bp) {\n      /** @type {?} */\n      const bpInList = this.printBreakpoints.find(\n      /**\n      * @param {?} it\n      * @return {?}\n      */\n      it => it.mediaQuery === bp.mediaQuery);\n\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints] : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n  /**\n   * Restore original activated breakpoints and clear internal caches\n   * @return {?}\n   */\n\n\n  clear() {\n    this.printBreakpoints = [];\n  }\n\n} // ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/**\n * Only support intercept queueing if the Breakpoint is a print \\@media query\n * @param {?} bp\n * @return {?}\n */\n\n\nfunction isPrintBreakPoint(bp) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/utils/array.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\n\n\nfunction coerceArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-observer/media-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n * \\@usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '\\@angular/flex-layout';\n *\n * \\@Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n\n\nclass MediaObserver {\n  /**\n   * @param {?} breakpoints\n   * @param {?} matchMedia\n   * @param {?} hook\n   */\n  constructor(breakpoints, matchMedia, hook) {\n    this.breakpoints = breakpoints;\n    this.matchMedia = matchMedia;\n    this.hook = hook;\n    /**\n     * Filter MediaChange notifications for overlapping breakpoints\n     */\n\n    this.filterOverlaps = false;\n    this.destroyed$ = new Subject();\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(filter(\n    /**\n    * @param {?} changes\n    * @return {?}\n    */\n    changes => changes.length > 0), map(\n    /**\n    * @param {?} changes\n    * @return {?}\n    */\n    changes => changes[0]));\n  }\n  /**\n   * Completes the active subject, signalling to all complete for all\n   * MediaObserver subscribers\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  } // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   * @return {?}\n   */\n\n\n  asObservable() {\n    return this._media$;\n  }\n  /**\n   * Allow programmatic query to determine if one or more media query/alias match\n   * the current viewport size.\n   * @param {?} value One or more media queries (or aliases) to check.\n   * @return {?} Whether any of the media queries match.\n   */\n\n\n  isActive(value) {\n    /** @type {?} */\n    const aliases = splitQueries(coerceArray(value));\n    return aliases.some(\n    /**\n    * @param {?} alias\n    * @return {?}\n    */\n    alias => {\n      /** @type {?} */\n      const query = toMediaQuery(alias, this.breakpoints);\n      return query !== null && this.matchMedia.isActive(query);\n    });\n  } // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   * @private\n   * @return {?}\n   */\n\n\n  watchActivations() {\n    /** @type {?} */\n    const queries = this.breakpoints.items.map(\n    /**\n    * @param {?} bp\n    * @return {?}\n    */\n    bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   * @private\n   * @param {?} mqList\n   * @return {?}\n   */\n\n\n  buildObservable(mqList) {\n    /** @type {?} */\n    const hasChanges =\n    /**\n    * @param {?} changes\n    * @return {?}\n    */\n    changes => {\n      /** @type {?} */\n      const isValidQuery =\n      /**\n      * @param {?} change\n      * @return {?}\n      */\n      change => change.mediaQuery.length > 0;\n\n      return changes.filter(isValidQuery).length > 0;\n    };\n    /** @type {?} */\n\n\n    const excludeOverlaps =\n    /**\n    * @param {?} changes\n    * @return {?}\n    */\n    changes => {\n      return !this.filterOverlaps ? changes : changes.filter(\n      /**\n      * @param {?} change\n      * @return {?}\n      */\n      change => {\n        /** @type {?} */\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n    /**\n     */\n\n\n    return this.matchMedia.observe(this.hook.withPrintQuery(mqList)).pipe(filter(\n    /**\n    * @param {?} change\n    * @return {?}\n    */\n    change => change.matches), debounceTime(0, asapScheduler), switchMap(\n    /**\n    * @param {?} _\n    * @return {?}\n    */\n    _ => of(this.findAllActivations())), map(excludeOverlaps), filter(hasChanges), takeUntil(this.destroyed$));\n  }\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   * @private\n   * @return {?}\n   */\n\n\n  findAllActivations() {\n    /** @type {?} */\n    const mergeMQAlias =\n    /**\n    * @param {?} change\n    * @return {?}\n    */\n    change => {\n      /** @type {?} */\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    /** @type {?} */\n\n\n    const replaceWithPrintAlias =\n    /**\n    * @param {?} change\n    * @return {?}\n    */\n    change => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia.activations.map(\n    /**\n    * @param {?} query\n    * @return {?}\n    */\n    query => new MediaChange(true, query)).map(replaceWithPrintAlias).map(mergeMQAlias).sort(sortDescendingPriority);\n  }\n\n}\n\nMediaObserver.ɵfac = function MediaObserver_Factory(t) {\n  return new (t || MediaObserver)(ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(MatchMedia), ɵngcc0.ɵɵinject(PrintHook));\n};\n/** @nocollapse */\n\n\nMediaObserver.ɵprov = ɵɵdefineInjectable({\n  factory: function MediaObserver_Factory() {\n    return new MediaObserver(ɵɵinject(BreakPointRegistry), ɵɵinject(MatchMedia), ɵɵinject(PrintHook));\n  },\n  token: MediaObserver,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nMediaObserver.ctorParameters = () => [{\n  type: BreakPointRegistry\n}, {\n  type: MatchMedia\n}, {\n  type: PrintHook\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: BreakPointRegistry\n    }, {\n      type: MatchMedia\n    }, {\n      type: PrintHook\n    }];\n  }, null);\n})();\n/**\n * Find associated breakpoint (if any)\n * @param {?} query\n * @param {?} locator\n * @return {?}\n */\n\n\nfunction toMediaQuery(query, locator) {\n  /** @type {?} */\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : null;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\n\n\nfunction splitQueries(queries) {\n  return queries.map(\n  /**\n  * @param {?} query\n  * @return {?}\n  */\n  query => query.split(',')).reduce(\n  /**\n  * @param {?} a1\n  * @param {?} a2\n  * @return {?}\n  */\n  (a1, a2) => a1.concat(a2)).map(\n  /**\n  * @param {?} query\n  * @return {?}\n  */\n  query => query.trim());\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-observer/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-trigger/media-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Class\n */\n\n\nclass MediaTrigger {\n  /**\n   * @param {?} breakpoints\n   * @param {?} matchMedia\n   * @param {?} layoutConfig\n   * @param {?} _platformId\n   * @param {?} _document\n   */\n  constructor(breakpoints, matchMedia, layoutConfig, _platformId, _document) {\n    this.breakpoints = breakpoints;\n    this.matchMedia = matchMedia;\n    this.layoutConfig = layoutConfig;\n    this._platformId = _platformId;\n    this._document = _document;\n    this.hasCachedRegistryMatches = false;\n    this.originalActivations = [];\n    this.originalRegistry = new Map();\n  }\n  /**\n   * Manually activate range of breakpoints\n   * @param {?} list array of mediaQuery or alias strings\n   * @return {?}\n   */\n\n\n  activate(list) {\n    list = list.map(\n    /**\n    * @param {?} it\n    * @return {?}\n    */\n    it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n    this.prepareAutoRestore();\n  }\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   * @return {?}\n   */\n\n\n  restore() {\n    if (this.hasCachedRegistryMatches) {\n      /** @type {?} */\n      const extractQuery =\n      /**\n      * @param {?} change\n      * @return {?}\n      */\n      change => change.mediaQuery;\n      /** @type {?} */\n\n\n      const list = this.originalActivations.map(extractQuery);\n\n      try {\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n      } finally {\n        this.originalActivations = [];\n\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  } // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   * @private\n   * @return {?}\n   */\n\n\n  prepareAutoRestore() {\n    /** @type {?} */\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    /** @type {?} */\n\n\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      /** @type {?} */\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   * @private\n   * @return {?}\n   */\n\n\n  deactivateAll() {\n    /** @type {?} */\n    const list = this.currentActivations;\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   * @private\n   * @return {?}\n   */\n\n\n  saveActivations() {\n    if (!this.hasCachedRegistryMatches) {\n      /** @type {?} */\n      const toMediaChange =\n      /**\n      * @param {?} query\n      * @return {?}\n      */\n      query => new MediaChange(true, query);\n      /** @type {?} */\n\n\n      const mergeMQAlias =\n      /**\n      * @param {?} change\n      * @return {?}\n      */\n      change => {\n        /** @type {?} */\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalActivations = this.currentActivations.map(toMediaChange).map(mergeMQAlias).sort(sortDescendingPriority);\n      this.cacheRegistryMatches();\n    }\n  }\n  /**\n   * Force set manual activations for specified mediaQuery list\n   * @private\n   * @param {?} list\n   * @return {?}\n   */\n\n\n  setActivations(list) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n\n    this.simulateMediaChanges(list);\n  }\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   * @private\n   * @param {?} queries\n   * @param {?=} matches\n   * @return {?}\n   */\n\n\n  simulateMediaChanges(queries, matches = true) {\n    /** @type {?} */\n    const toMediaQuery =\n    /**\n    * @param {?} query\n    * @return {?}\n    */\n    query => {\n      /** @type {?} */\n      const locator = this.breakpoints;\n      /** @type {?} */\n\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    /** @type {?} */\n\n\n    const emitChangeEvent =\n    /**\n    * @param {?} query\n    * @return {?}\n    */\n    query => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   * @private\n   * @param {?} queries\n   * @param {?} matches\n   * @return {?}\n   */\n\n\n  forceRegistryMatches(queries, matches) {\n    /** @type {?} */\n    const registry = new Map();\n    queries.forEach(\n    /**\n    * @param {?} query\n    * @return {?}\n    */\n    query => {\n      registry.set(query,\n      /** @type {?} */\n      {\n        matches\n      });\n    });\n    this.matchMedia.registry = registry;\n  }\n  /**\n   * Save current MatchMedia::registry items.\n   * @private\n   * @return {?}\n   */\n\n\n  cacheRegistryMatches() {\n    /** @type {?} */\n    const target = this.originalRegistry;\n    target.clear();\n    this.matchMedia.registry.forEach(\n    /**\n    * @param {?} value\n    * @param {?} key\n    * @return {?}\n    */\n    (value, key) => {\n      target.set(key, value);\n    });\n    this.hasCachedRegistryMatches = true;\n  }\n  /**\n   * Restore original, 'true' registry\n   * @private\n   * @return {?}\n   */\n\n\n  restoreRegistryMatches() {\n    /** @type {?} */\n    const target = this.matchMedia.registry;\n    target.clear();\n    this.originalRegistry.forEach(\n    /**\n    * @param {?} value\n    * @param {?} key\n    * @return {?}\n    */\n    (value, key) => {\n      target.set(key, value);\n    });\n    this.originalRegistry.clear();\n    this.hasCachedRegistryMatches = false;\n  }\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   * @private\n   * @param {?} matches\n   * @param {?} query\n   * @return {?}\n   */\n\n\n  emitChangeEvent(matches, query) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n}\n\nMediaTrigger.ɵfac = function MediaTrigger_Factory(t) {\n  return new (t || MediaTrigger)(ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(MatchMedia), ɵngcc0.ɵɵinject(LAYOUT_CONFIG), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(DOCUMENT));\n};\n/** @nocollapse */\n\n\nMediaTrigger.ɵprov = ɵɵdefineInjectable({\n  factory: function MediaTrigger_Factory() {\n    return new MediaTrigger(ɵɵinject(BreakPointRegistry), ɵɵinject(MatchMedia), ɵɵinject(LAYOUT_CONFIG), ɵɵinject(PLATFORM_ID), ɵɵinject(DOCUMENT));\n  },\n  token: MediaTrigger,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nMediaTrigger.ctorParameters = () => [{\n  type: BreakPointRegistry\n}, {\n  type: MatchMedia\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [LAYOUT_CONFIG]\n  }]\n}, {\n  type: Object,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaTrigger, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: BreakPointRegistry\n    }, {\n      type: MatchMedia\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_CONFIG]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-trigger/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/utils/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/auto-prefixer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n * @param {?} target\n * @return {?}\n */\n\n\nfunction applyCssPrefixes(target) {\n  for (let key in target) {\n    /** @type {?} */\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = ['-webkit-flex', 'flex'];\n        } else if (value === 'inline-flex') {\n          target['display'] = ['-webkit-inline-flex', 'inline-flex'];\n        } else {\n          target['display'] = value;\n        }\n\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n\n  return target;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/style-utils/style-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass StyleUtils {\n  /**\n   * @param {?} _serverStylesheet\n   * @param {?} _serverModuleLoaded\n   * @param {?} _platformId\n   * @param {?} layoutConfig\n   */\n  constructor(_serverStylesheet, _serverModuleLoaded, _platformId, layoutConfig) {\n    this._serverStylesheet = _serverStylesheet;\n    this._serverModuleLoaded = _serverModuleLoaded;\n    this._platformId = _platformId;\n    this.layoutConfig = layoutConfig;\n  }\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   * @param {?} element\n   * @param {?} style\n   * @param {?=} value\n   * @return {?}\n   */\n\n\n  applyStyleToElement(element, style, value = null) {\n    /** @type {?} */\n    let styles = {};\n\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   * @param {?} style\n   * @param {?=} elements\n   * @return {?}\n   */\n\n\n  applyStyleToElements(style, elements = []) {\n    /** @type {?} */\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(\n    /**\n    * @param {?} el\n    * @return {?}\n    */\n    el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   * @param {?} target\n   * @return {?}\n   */\n\n\n  getFlowDirection(target) {\n    /** @type {?} */\n    const query = 'flex-direction';\n    /** @type {?} */\n\n    let value = this.lookupStyle(target, query);\n    /** @type {?} */\n\n    const hasInlineValue = this.lookupInlineStyle(target, query) || isPlatformServer(this._platformId) && this._serverModuleLoaded ? value : '';\n    return [value || 'row', hasInlineValue];\n  }\n  /**\n   * @param {?} target\n   * @return {?}\n   */\n\n\n  hasWrap(target) {\n    /** @type {?} */\n    const query = 'flex-wrap';\n    return this.lookupStyle(target, query) === 'wrap';\n  }\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   * @param {?} element\n   * @param {?} attribute\n   * @return {?}\n   */\n\n\n  lookupAttributeValue(element, attribute) {\n    return element.getAttribute(attribute) || '';\n  }\n  /**\n   * Find the DOM element's inline style value (if any)\n   * @param {?} element\n   * @param {?} styleName\n   * @return {?}\n   */\n\n\n  lookupInlineStyle(element, styleName) {\n    return isPlatformBrowser(this._platformId) ? element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   * @param {?} element\n   * @param {?} styleName\n   * @param {?=} inlineOnly\n   * @return {?}\n   */\n\n\n  lookupStyle(element, styleName, inlineOnly = false) {\n    /** @type {?} */\n    let value = '';\n\n    if (element) {\n      /** @type {?} */\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    } // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n\n\n    return value ? value.trim() : '';\n  }\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   * @private\n   * @param {?} styles\n   * @param {?} element\n   * @return {?}\n   */\n\n\n  _applyMultiValueStyleToElement(styles, element) {\n    Object.keys(styles).sort().forEach(\n    /**\n    * @param {?} key\n    * @return {?}\n    */\n    key => {\n      /** @type {?} */\n      const el = styles[key];\n      /** @type {?} */\n\n      const values = Array.isArray(el) ? el : [el];\n      values.sort();\n\n      for (let value of values) {\n        value = value ? value + '' : '';\n\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ? element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n  /**\n   * @private\n   * @param {?} element\n   * @param {?} styleName\n   * @param {?=} styleValue\n   * @return {?}\n   */\n\n\n  _setServerStyle(element, styleName, styleValue) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    /** @type {?} */\n\n    const styleMap = this._readStyleAttribute(element);\n\n    styleMap[styleName] = styleValue || '';\n\n    this._writeStyleAttribute(element, styleMap);\n  }\n  /**\n   * @private\n   * @param {?} element\n   * @param {?} styleName\n   * @return {?}\n   */\n\n\n  _getServerStyle(element, styleName) {\n    /** @type {?} */\n    const styleMap = this._readStyleAttribute(element);\n\n    return styleMap[styleName] || '';\n  }\n  /**\n   * @private\n   * @param {?} element\n   * @return {?}\n   */\n\n\n  _readStyleAttribute(element) {\n    /** @type {?} */\n    const styleMap = {};\n    /** @type {?} */\n\n    const styleAttribute = element.getAttribute('style');\n\n    if (styleAttribute) {\n      /** @type {?} */\n      const styleList = styleAttribute.split(/;+/g);\n\n      for (let i = 0; i < styleList.length; i++) {\n        /** @type {?} */\n        const style = styleList[i].trim();\n\n        if (style.length > 0) {\n          /** @type {?} */\n          const colonIndex = style.indexOf(':');\n\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          /** @type {?} */\n\n\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n\n    return styleMap;\n  }\n  /**\n   * @private\n   * @param {?} element\n   * @param {?} styleMap\n   * @return {?}\n   */\n\n\n  _writeStyleAttribute(element, styleMap) {\n    /** @type {?} */\n    let styleAttrValue = '';\n\n    for (const key in styleMap) {\n      /** @type {?} */\n      const newValue = styleMap[key];\n\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n\n    element.setAttribute('style', styleAttrValue);\n  }\n\n}\n\nStyleUtils.ɵfac = function StyleUtils_Factory(t) {\n  return new (t || StyleUtils)(ɵngcc0.ɵɵinject(StylesheetMap), ɵngcc0.ɵɵinject(SERVER_TOKEN), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(LAYOUT_CONFIG));\n};\n/** @nocollapse */\n\n\nStyleUtils.ɵprov = ɵɵdefineInjectable({\n  factory: function StyleUtils_Factory() {\n    return new StyleUtils(ɵɵinject(StylesheetMap), ɵɵinject(SERVER_TOKEN), ɵɵinject(PLATFORM_ID), ɵɵinject(LAYOUT_CONFIG));\n  },\n  token: StyleUtils,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nStyleUtils.ctorParameters = () => [{\n  type: StylesheetMap\n}, {\n  type: Boolean,\n  decorators: [{\n    type: Inject,\n    args: [SERVER_TOKEN]\n  }]\n}, {\n  type: Object,\n  decorators: [{\n    type: Inject,\n    args: [PLATFORM_ID]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [LAYOUT_CONFIG]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StyleUtils, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: StylesheetMap\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_CONFIG]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: core/style-builder/style-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * A class that encapsulates CSS style generation for common directives\n * @abstract\n */\n\n\nclass StyleBuilder {\n  constructor() {\n    /**\n     * Whether to cache the generated output styles\n     */\n    this.shouldCache = true;\n  }\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   * @param {?} _input\n   * @param {?} _styles\n   * @param {?=} _parent\n   * @return {?}\n   */\n\n\n  sideEffect(_input, _styles, _parent) {}\n\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/basis-validator/basis-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n * @param {?} basis\n * @param {?=} grow\n * @param {?=} shrink\n * @return {?}\n */\n\n\nfunction validateBasis(basis, grow = '1', shrink = '1') {\n  /** @type {?} */\n  let parts = [grow, shrink, basis];\n  /** @type {?} */\n\n  let j = basis.indexOf('calc');\n\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    /** @type {?} */\n\n    let matches = basis.substr(0, j).trim().split(' ');\n\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    /** @type {?} */\n    let matches = basis.split(' ');\n    parts = matches.length === 3 ? matches : [grow, shrink, basis];\n  }\n\n  return parts;\n}\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n * @param {?} calc\n * @return {?}\n */\n\n\nfunction _validateCalcValue(calc) {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-marshaller/media-marshaller.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n\n\nclass MediaMarshaller {\n  /**\n   * @param {?} matchMedia\n   * @param {?} breakpoints\n   * @param {?} hook\n   */\n  constructor(matchMedia, breakpoints, hook) {\n    this.matchMedia = matchMedia;\n    this.breakpoints = breakpoints;\n    this.hook = hook;\n    this.activatedBreakpoints = [];\n    this.elementMap = new Map();\n    this.elementKeyMap = new WeakMap();\n    this.watcherMap = new WeakMap(); // special triggers to update elements\n    // special triggers to update elements\n\n    this.updateMap = new WeakMap(); // callback functions to update styles\n    // callback functions to update styles\n\n    this.clearMap = new WeakMap(); // callback functions to clear styles\n    // callback functions to clear styles\n\n    this.subject = new Subject();\n    this.observeActivations();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get activatedAlias() {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param {?} mc\n   * @return {?}\n   */\n\n\n  onMediaChange(mc) {\n    /** @type {?} */\n    const bp = this.findByQuery(mc.mediaQuery);\n\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n        this.updateStyles();\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n        this.updateStyles();\n      }\n    }\n  }\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param {?} element\n   * @param {?} key\n   * @param {?=} updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param {?=} clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param {?=} extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   * @return {?}\n   */\n\n\n  init(element, key, updateFn, clearFn, extraTriggers = []) {\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param {?} element\n   * @param {?} key\n   * @param {?=} bp\n   * @return {?}\n   */\n\n\n  getValue(element, key, bp) {\n    /** @type {?} */\n    const bpMap = this.elementMap.get(element);\n\n    if (bpMap) {\n      /** @type {?} */\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n\n      if (values) {\n        return values.get(key);\n      }\n    }\n\n    return undefined;\n  }\n  /**\n   * whether the element has values for a given key\n   * @param {?} element\n   * @param {?} key\n   * @return {?}\n   */\n\n\n  hasValue(element, key) {\n    /** @type {?} */\n    const bpMap = this.elementMap.get(element);\n\n    if (bpMap) {\n      /** @type {?} */\n      const values = this.getActivatedValues(bpMap, key);\n\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Set the value for an input on a directive\n   * @param {?} element the element in question\n   * @param {?} key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param {?} val the value for the breakpoint\n   * @param {?} bp the breakpoint suffix (empty string = default)\n   * @return {?}\n   */\n\n\n  setValue(element, key, val, bp) {\n    /** @type {?} */\n    let bpMap = this.elementMap.get(element);\n\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      /** @type {?} */\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    /** @type {?} */\n\n\n    const value = this.getValue(element, key);\n\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n  /**\n   * Track element value changes for a specific key\n   * @param {?} element\n   * @param {?} key\n   * @return {?}\n   */\n\n\n  trackValue(element, key) {\n    return this.subject.asObservable().pipe(filter(\n    /**\n    * @param {?} v\n    * @return {?}\n    */\n    v => v.element === element && v.key === key));\n  }\n  /**\n   * update all styles for all elements on the current breakpoint\n   * @return {?}\n   */\n\n\n  updateStyles() {\n    this.elementMap.forEach(\n    /**\n    * @param {?} bpMap\n    * @param {?} el\n    * @return {?}\n    */\n    (bpMap, el) => {\n      /** @type {?} */\n      const keyMap = new Set(\n      /** @type {?} */\n      this.elementKeyMap.get(el));\n      /** @type {?} */\n\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach(\n        /**\n        * @param {?} v\n        * @param {?} k\n        * @return {?}\n        */\n        (v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(\n      /**\n      * @param {?} k\n      * @return {?}\n      */\n      k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n\n        if (valueMap) {\n          /** @type {?} */\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n    });\n  }\n  /**\n   * clear the styles for a given element\n   * @param {?} element\n   * @param {?} key\n   * @return {?}\n   */\n\n\n  clearElement(element, key) {\n    /** @type {?} */\n    const builders = this.clearMap.get(element);\n\n    if (builders) {\n      /** @type {?} */\n      const clearFn =\n      /** @type {?} */\n      builders.get(key);\n\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({\n          element,\n          key,\n          value: ''\n        });\n      }\n    }\n  }\n  /**\n   * update a given element with the activated values for a given key\n   * @param {?} element\n   * @param {?} key\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  updateElement(element, key, value) {\n    /** @type {?} */\n    const builders = this.updateMap.get(element);\n\n    if (builders) {\n      /** @type {?} */\n      const updateFn =\n      /** @type {?} */\n      builders.get(key);\n\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({\n          element,\n          key,\n          value\n        });\n      }\n    }\n  }\n  /**\n   * release all references to a given element\n   * @param {?} element\n   * @return {?}\n   */\n\n\n  releaseElement(element) {\n    /** @type {?} */\n    const watcherMap = this.watcherMap.get(element);\n\n    if (watcherMap) {\n      watcherMap.forEach(\n      /**\n      * @param {?} s\n      * @return {?}\n      */\n      s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    /** @type {?} */\n\n\n    const elementMap = this.elementMap.get(element);\n\n    if (elementMap) {\n      elementMap.forEach(\n      /**\n      * @param {?} _\n      * @param {?} s\n      * @return {?}\n      */\n      (_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param {?} element\n   * @param {?=} key\n   * @return {?}\n   */\n\n\n  triggerUpdate(element, key) {\n    /** @type {?} */\n    const bpMap = this.elementMap.get(element);\n\n    if (bpMap) {\n      /** @type {?} */\n      const valueMap = this.getActivatedValues(bpMap, key);\n\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach(\n          /**\n          * @param {?} v\n          * @param {?} k\n          * @return {?}\n          */\n          (v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n  /**\n   * Cross-reference for HTMLElement with directive key\n   * @private\n   * @param {?} element\n   * @param {?} key\n   * @return {?}\n   */\n\n\n  buildElementKeyMap(element, key) {\n    /** @type {?} */\n    let keyMap = this.elementKeyMap.get(element);\n\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n\n    keyMap.add(key);\n  }\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   * @private\n   * @param {?} element\n   * @param {?} key\n   * @param {?} triggers\n   * @return {?}\n   */\n\n\n  watchExtraTriggers(element, key, triggers) {\n    if (triggers && triggers.length) {\n      /** @type {?} */\n      let watchers = this.watcherMap.get(element);\n\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      /** @type {?} */\n\n\n      const subscription = watchers.get(key);\n\n      if (!subscription) {\n        /** @type {?} */\n        const newSubscription = merge(...triggers).subscribe(\n        /**\n        * @return {?}\n        */\n        () => {\n          /** @type {?} */\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n  /**\n   * Breakpoint locator by mediaQuery\n   * @private\n   * @param {?} query\n   * @return {?}\n   */\n\n\n  findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @private\n   * @param {?} bpMap\n   * @param {?=} key\n   * @return {?}\n   */\n\n\n  getActivatedValues(bpMap, key) {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      /** @type {?} */\n      const activatedBp = this.activatedBreakpoints[i];\n      /** @type {?} */\n\n      const valueMap = bpMap.get(activatedBp.alias);\n\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key) && valueMap.get(key) != null) {\n          return valueMap;\n        }\n      }\n    }\n    /** @type {?} */\n\n\n    const lastHope = bpMap.get('');\n    return key === undefined || lastHope && lastHope.has(key) ? lastHope : undefined;\n  }\n  /**\n   * Watch for mediaQuery breakpoint activations\n   * @private\n   * @return {?}\n   */\n\n\n  observeActivations() {\n    /** @type {?} */\n    const target =\n    /** @type {?} */\n\n    /** @type {?} */\n    this;\n    /** @type {?} */\n\n    const queries = this.breakpoints.items.map(\n    /**\n    * @param {?} bp\n    * @return {?}\n    */\n    bp => bp.mediaQuery);\n    this.matchMedia.observe(this.hook.withPrintQuery(queries)).pipe(tap(this.hook.interceptEvents(target)), filter(this.hook.blockPropagation())).subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nMediaMarshaller.ɵfac = function MediaMarshaller_Factory(t) {\n  return new (t || MediaMarshaller)(ɵngcc0.ɵɵinject(MatchMedia), ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(PrintHook));\n};\n/** @nocollapse */\n\n\nMediaMarshaller.ɵprov = ɵɵdefineInjectable({\n  factory: function MediaMarshaller_Factory() {\n    return new MediaMarshaller(ɵɵinject(MatchMedia), ɵɵinject(BreakPointRegistry), ɵɵinject(PrintHook));\n  },\n  token: MediaMarshaller,\n  providedIn: \"root\"\n});\n/** @nocollapse */\n\nMediaMarshaller.ctorParameters = () => [{\n  type: MatchMedia\n}, {\n  type: BreakPointRegistry\n}, {\n  type: PrintHook\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMarshaller, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: MatchMedia\n    }, {\n      type: BreakPointRegistry\n    }, {\n      type: PrintHook\n    }];\n  }, null);\n})();\n/**\n * @param {?} map\n * @param {?} element\n * @param {?} key\n * @param {?=} input\n * @return {?}\n */\n\n\nfunction initBuilderMap(map$$1, element, key, input) {\n  if (input !== undefined) {\n    /** @type {?} */\n    let oldMap = map$$1.get(element);\n\n    if (!oldMap) {\n      oldMap = new Map();\n      map$$1.set(element, oldMap);\n    }\n\n    oldMap.set(key, input);\n  }\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: core/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { MatchMedia as ɵMatchMedia, MockMatchMedia as ɵMockMatchMedia, MockMatchMediaProvider as ɵMockMatchMediaProvider, CoreModule, removeStyles, BROWSER_PROVIDER, CLASS_NAME, MediaChange, StylesheetMap, DEFAULT_CONFIG, LAYOUT_CONFIG, SERVER_TOKEN, BREAKPOINT, mergeAlias, BaseDirective2, DEFAULT_BREAKPOINTS, ScreenTypes, ORIENTATION_BREAKPOINTS, BreakPointRegistry, BREAKPOINTS, MediaObserver, MediaTrigger, sortDescendingPriority, sortAscendingPriority, coerceArray, StyleUtils, StyleBuilder, validateBasis, MediaMarshaller, BREAKPOINT_PRINT, PrintHook };","map":{"version":3,"names":["APP_BOOTSTRAP_LISTENER","PLATFORM_ID","NgModule","Injectable","InjectionToken","Inject","inject","NgZone","ɵɵdefineInjectable","ɵɵinject","DOCUMENT","isPlatformBrowser","isPlatformServer","Subject","BehaviorSubject","Observable","merge","asapScheduler","of","fromEvent","filter","debounceTime","map","switchMap","takeUntil","take","tap","ɵngcc0","removeStyles","_document","platformId","elements","Array","from","querySelectorAll","CLASS_NAME","classRegex","forEach","el","classList","contains","parentNode","removeChild","className","replace","BROWSER_PROVIDER","provide","useFactory","deps","multi","CoreModule","ɵfac","CoreModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","providers","ngDevMode","ɵsetClassMetadata","args","MediaChange","constructor","matches","mediaQuery","mqAlias","suffix","priority","property","clone","StylesheetMap","stylesheet","Map","addStyleToElement","element","style","value","get","set","clearStyles","clear","getStyleForElement","styleName","styles","StylesheetMap_Factory","ɵprov","factory","token","providedIn","DEFAULT_CONFIG","addFlexToParent","addOrientationBps","disableDefaultBps","disableVendorPrefixes","serverLoaded","useColumnBasisZero","printWithBreakpoints","mediaTriggerAutoRestore","ssrObserveBreakpoints","LAYOUT_CONFIG","SERVER_TOKEN","BREAKPOINT","mergeAlias","dest","source","alias","INLINE","LAYOUT_VALUES","buildLayoutCSS","direction","wrap","isInline","validateValue","buildCSS","toLowerCase","inline","split","find","x","validateWrapValue","BaseDirective2","elementRef","styleBuilder","styler","marshal","DIRECTIVE_KEY","inputs","mru","destroySubject","styleCache","parentElement","nativeElement","activatedValue","getValue","setValue","activatedAlias","ngOnChanges","changes","Object","keys","key","indexOf","bp","slice","join","val","currentValue","ngOnDestroy","next","complete","releaseElement","init","extraTriggers","updateWithValue","bind","addStyles","input","parent","builder","useCache","shouldCache","genStyles","buildStyles","assign","applyStyleToElement","sideEffect","k","triggerUpdate","getFlexFlowDirection","target","addIfMissing","hasInlineValue","getFlowDirection","applyStyleToElements","trim","hasWrap","BaseDirective2_Factory","ɵɵinvalidFactory","ɵdir","ɵɵdefineDirective","features","ɵɵNgOnChangesFeature","DEFAULT_BREAKPOINTS","overlapping","HANDSET_PORTRAIT","HANDSET_LANDSCAPE","TABLET_PORTRAIT","TABLET_LANDSCAPE","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","ORIENTATION_BREAKPOINTS","HANDSET","TABLET","WEB","extendObject","sources","TypeError","hasOwnProperty","ALIAS_DELIMITERS","firstUpperCase","part","first","length","charAt","remainder","toUpperCase","camelCase","name","validateSuffixes","list","mergeByAlias","defaults","custom","dict","BREAKPOINTS","breakpoints","layoutConfig","bpFlattenArray","concat","apply","v","isArray","builtIns","sortDescendingPriority","a","b","priorityA","priorityB","sortAscendingPriority","pA","pB","BreakPointRegistry","findByMap","items","sort","findByAlias","findWithPredicate","findByQuery","query","overlappings","it","aliases","suffixes","searchFn","response","BreakPointRegistry_Factory","ctorParameters","decorators","MatchMedia","_zone","_platformId","registry","pendingRemoveListenerFns","_observable$","asObservable","activations","results","mql","push","isActive","registerQuery","some","m","observe","mqList","filterOthers","matchMedia$","pipe","change","registration$","observer","lastChange","pop","e","buildQueryCss","onMQLEvent","run","buildMQL","addListener","removeListener","fn","constructMql","MatchMedia_Factory","undefined","ALL_STYLES","mediaQueries","styleEl","createElement","setAttribute","styleSheet","cssText","appendChild","createTextNode","head","mq","console","error","isBrowser","canListen","window","matchMedia","media","onchange","addEventListener","removeEventListener","dispatchEvent","MockMatchMedia","_breakpoints","autoRegisterQueries","useOverlaps","clearAll","destroy","activate","_validateQuery","_deactivateAll","_registerMediaQuery","_activateWithOverlaps","hasActivated","queryOrAlias","_activateByAlias","_activateByQuery","has","deactivate","MockMediaQueryList","MockMatchMedia_Factory","_mediaQuery","_isActive","_listeners","callback","cb","call","listener","_","__","___","MockMatchMediaProvider","useClass","PRINT","BREAKPOINT_PRINT","PrintHook","registeredBeforeAfterPrintHooks","isPrintingBeforeAfterEvent","beforePrintEventListeners","afterPrintEventListeners","isPrinting","queue","PrintQueue","deactivations","withPrintQuery","queries","isPrintEvent","startsWith","printAlias","printBreakPoints","getEventBreakpoints","updateEvent","event","registerBeforeAfterPrintHooks","defaultView","beforePrintListener","startPrinting","updateStyles","afterPrintListener","stopPrinting","interceptEvents","collectActivations","blockPropagation","bpList","activatedBreakpoints","addPrintBreakpoints","l","PrintHook_Factory","printBreakpoints","addBreakpoint","bpInList","isPrintBreakPoint","coerceArray","MediaObserver","hook","filterOverlaps","destroyed$","_media$","watchActivations","media$","splitQueries","toMediaQuery","buildObservable","hasChanges","isValidQuery","excludeOverlaps","findAllActivations","mergeMQAlias","replaceWithPrintAlias","MediaObserver_Factory","locator","reduce","a1","a2","MediaTrigger","hasCachedRegistryMatches","originalActivations","originalRegistry","saveActivations","deactivateAll","setActivations","prepareAutoRestore","restore","extractQuery","restoreRegistryMatches","resizeSubscription","unsubscribe","enableAutoRestore","resize$","subscribe","currentActivations","forceRegistryMatches","simulateMediaChanges","toMediaChange","cacheRegistryMatches","emitChangeEvent","MediaTrigger_Factory","applyCssPrefixes","isNaN","StyleUtils","_serverStylesheet","_serverModuleLoaded","_applyMultiValueStyleToElement","lookupStyle","lookupInlineStyle","lookupAttributeValue","attribute","getAttribute","getPropertyValue","_getServerStyle","inlineOnly","immediateValue","getComputedStyle","values","setProperty","_setServerStyle","styleValue","styleMap","_readStyleAttribute","_writeStyleAttribute","styleAttribute","styleList","i","colonIndex","Error","substr","styleAttrValue","newValue","StyleUtils_Factory","Boolean","StyleBuilder","_input","_styles","_parent","validateBasis","basis","grow","shrink","parts","j","_validateCalcValue","substring","calc","MediaMarshaller","elementMap","elementKeyMap","WeakMap","watcherMap","updateMap","clearMap","subject","observeActivations","onMediaChange","mc","splice","updateFn","clearFn","initBuilderMap","buildElementKeyMap","watchExtraTriggers","bpMap","getActivatedValues","hasValue","updateElement","trackValue","keyMap","Set","valueMap","delete","clearElement","builders","s","add","triggers","watchers","subscription","newSubscription","activatedBp","lastHope","MediaMarshaller_Factory","map$$1","oldMap","ɵMatchMedia","ɵMockMatchMedia","ɵMockMatchMediaProvider"],"sources":["C:/selise/twitter/node_modules/@angular/flex-layout/__ivy_ngcc__/esm2015/core.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { APP_BOOTSTRAP_LISTENER, PLATFORM_ID, NgModule, Injectable, InjectionToken, Inject, inject, NgZone, ɵɵdefineInjectable, ɵɵinject } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { Subject, BehaviorSubject, Observable, merge, asapScheduler, of, fromEvent } from 'rxjs';\nimport { filter, debounceTime, map, switchMap, takeUntil, take, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/browser-provider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n * @param {?} _document\n * @param {?} platformId\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction removeStyles(_document, platformId) {\n    return (/**\n     * @return {?}\n     */\n    () => {\n        if (isPlatformBrowser(platformId)) {\n            /** @type {?} */\n            const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n            // RegExp constructor should only be used if passing a variable to the constructor.\n            // When using static regular expression it is more performant to use reg exp literal.\n            // This is also needed to provide Safari 9 compatibility, please see\n            // https://stackoverflow.com/questions/37919802 for more discussion.\n            /** @type {?} */\n            const classRegex = /\\bflex-layout-.+?\\b/g;\n            elements.forEach((/**\n             * @param {?} el\n             * @return {?}\n             */\n            el => {\n                el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n                    el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n            }));\n        }\n    });\n}\n/**\n *  Provider to remove SSR styles on the browser\n * @type {?}\n */\nconst BROWSER_PROVIDER = {\n    provide: (/** @type {?} */ (APP_BOOTSTRAP_LISTENER)),\n    useFactory: removeStyles,\n    deps: [DOCUMENT, PLATFORM_ID],\n    multi: true\n};\n/** @type {?} */\nconst CLASS_NAME = 'flex-layout-';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * *****************************************************************\n * Define module for common Angular Layout utilities\n * *****************************************************************\n */\nclass CoreModule {\n}\nCoreModule.ɵfac = function CoreModule_Factory(t) { return new (t || CoreModule)(); };\nCoreModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CoreModule });\nCoreModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [BROWSER_PROVIDER] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CoreModule, [{\n        type: NgModule,\n        args: [{\n                providers: [BROWSER_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-change.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nclass MediaChange {\n    /**\n     * @param {?=} matches whether the mediaQuery is currently activated\n     * @param {?=} mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n     * @param {?=} mqAlias e.g. gt-sm, md, gt-lg\n     * @param {?=} suffix e.g. GtSM, Md, GtLg\n     * @param {?=} priority the priority of activation for the given breakpoint\n     */\n    constructor(matches = false, mediaQuery = 'all', mqAlias = '', suffix = '', priority = 0) {\n        this.matches = matches;\n        this.mediaQuery = mediaQuery;\n        this.mqAlias = mqAlias;\n        this.suffix = suffix;\n        this.priority = priority;\n        this.property = '';\n    }\n    /**\n     * Create an exact copy of the MediaChange\n     * @return {?}\n     */\n    clone() {\n        return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/stylesheet-map/stylesheet-map.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\nclass StylesheetMap {\n    constructor() {\n        this.stylesheet = new Map();\n    }\n    /**\n     * Add an individual style to an HTML element\n     * @param {?} element\n     * @param {?} style\n     * @param {?} value\n     * @return {?}\n     */\n    addStyleToElement(element, style, value) {\n        /** @type {?} */\n        const stylesheet = this.stylesheet.get(element);\n        if (stylesheet) {\n            stylesheet.set(style, value);\n        }\n        else {\n            this.stylesheet.set(element, new Map([[style, value]]));\n        }\n    }\n    /**\n     * Clear the virtual stylesheet\n     * @return {?}\n     */\n    clearStyles() {\n        this.stylesheet.clear();\n    }\n    /**\n     * Retrieve a given style for an HTML element\n     * @param {?} el\n     * @param {?} styleName\n     * @return {?}\n     */\n    getStyleForElement(el, styleName) {\n        /** @type {?} */\n        const styles = this.stylesheet.get(el);\n        /** @type {?} */\n        let value = '';\n        if (styles) {\n            /** @type {?} */\n            const style = styles.get(styleName);\n            if (typeof style === 'number' || typeof style === 'string') {\n                value = style + '';\n            }\n        }\n        return value;\n    }\n}\nStylesheetMap.ɵfac = function StylesheetMap_Factory(t) { return new (t || StylesheetMap)(); };\n/** @nocollapse */ StylesheetMap.ɵprov = ɵɵdefineInjectable({ factory: function StylesheetMap_Factory() { return new StylesheetMap(); }, token: StylesheetMap, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StylesheetMap, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/stylesheet-map/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/library-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_CONFIG = {\n    addFlexToParent: true,\n    addOrientationBps: false,\n    disableDefaultBps: false,\n    disableVendorPrefixes: false,\n    serverLoaded: false,\n    useColumnBasisZero: true,\n    printWithBreakpoints: [],\n    mediaTriggerAutoRestore: true,\n    ssrObserveBreakpoints: [],\n};\n/** @type {?} */\nconst LAYOUT_CONFIG = new InjectionToken('Flex Layout token, config options for the library', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => DEFAULT_CONFIG)\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/server-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n * @type {?}\n */\nconst SERVER_TOKEN = new InjectionToken('FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => false)\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/breakpoint-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst BREAKPOINT = new InjectionToken('Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => null)\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/tokens/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/add-alias.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n * @param {?} dest\n * @param {?} source\n * @return {?}\n */\nfunction mergeAlias(dest, source) {\n    dest = dest ? dest.clone() : new MediaChange();\n    if (source) {\n        dest.mqAlias = source.alias;\n        dest.mediaQuery = source.mediaQuery;\n        dest.suffix = (/** @type {?} */ (source.suffix));\n        dest.priority = (/** @type {?} */ (source.priority));\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/layout-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst INLINE = 'inline';\n/** @type {?} */\nconst LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n * @param {?} value\n * @return {?}\n */\nfunction buildLayoutCSS(value) {\n    let [direction, wrap, isInline] = validateValue(value);\n    return buildCSS(direction, wrap, isInline);\n}\n/**\n * Validate the value to be one of the acceptable value options\n * Use default fallback of 'row'\n * @param {?} value\n * @return {?}\n */\nfunction validateValue(value) {\n    value = value ? value.toLowerCase() : '';\n    let [direction, wrap, inline] = value.split(' ');\n    // First value must be the `flex-direction`\n    if (!LAYOUT_VALUES.find((/**\n     * @param {?} x\n     * @return {?}\n     */\n    x => x === direction))) {\n        direction = LAYOUT_VALUES[0];\n    }\n    if (wrap === INLINE) {\n        wrap = (inline !== INLINE) ? inline : '';\n        inline = INLINE;\n    }\n    return [direction, validateWrapValue(wrap), !!inline];\n}\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n * @param {?} value\n * @return {?}\n */\nfunction validateWrapValue(value) {\n    if (!!value) {\n        switch (value.toLowerCase()) {\n            case 'reverse':\n            case 'wrap-reverse':\n            case 'reverse-wrap':\n                value = 'wrap-reverse';\n                break;\n            case 'no':\n            case 'none':\n            case 'nowrap':\n                value = 'nowrap';\n                break;\n            // All other values fallback to 'wrap'\n            default:\n                value = 'wrap';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n * @param {?} direction\n * @param {?=} wrap\n * @param {?=} inline\n * @return {?}\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n    return {\n        'display': inline ? 'inline-flex' : 'flex',\n        'box-sizing': 'border-box',\n        'flex-direction': direction,\n        'flex-wrap': !!wrap ? wrap : null\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/base/base2.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n */\nclass BaseDirective2 {\n    /**\n     * @protected\n     * @param {?} elementRef\n     * @param {?} styleBuilder\n     * @param {?} styler\n     * @param {?} marshal\n     */\n    constructor(elementRef, styleBuilder, styler, marshal) {\n        this.elementRef = elementRef;\n        this.styleBuilder = styleBuilder;\n        this.styler = styler;\n        this.marshal = marshal;\n        this.DIRECTIVE_KEY = '';\n        this.inputs = [];\n        /**\n         * The most recently used styles for the builder\n         */\n        this.mru = {};\n        this.destroySubject = new Subject();\n        /**\n         * Cache map for style computation\n         */\n        this.styleCache = new Map();\n    }\n    /**\n     * Access to host element's parent DOM node\n     * @protected\n     * @return {?}\n     */\n    get parentElement() {\n        return this.elementRef.nativeElement.parentElement;\n    }\n    /**\n     * Access to the HTMLElement for the directive\n     * @protected\n     * @return {?}\n     */\n    get nativeElement() {\n        return this.elementRef.nativeElement;\n    }\n    /**\n     * Access to the activated value for the directive\n     * @return {?}\n     */\n    get activatedValue() {\n        return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set activatedValue(value) {\n        this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value, this.marshal.activatedAlias);\n    }\n    /**\n     * For \\@Input changes\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        Object.keys(changes).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            if (this.inputs.indexOf(key) !== -1) {\n                /** @type {?} */\n                const bp = key.split('.').slice(1).join('.');\n                /** @type {?} */\n                const val = changes[key].currentValue;\n                this.setValue(val, bp);\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroySubject.next();\n        this.destroySubject.complete();\n        this.marshal.releaseElement(this.nativeElement);\n    }\n    /**\n     * Register with central marshaller service\n     * @protected\n     * @param {?=} extraTriggers\n     * @return {?}\n     */\n    init(extraTriggers = []) {\n        this.marshal.init(this.elementRef.nativeElement, this.DIRECTIVE_KEY, this.updateWithValue.bind(this), this.clearStyles.bind(this), extraTriggers);\n    }\n    /**\n     * Add styles to the element using predefined style builder\n     * @protected\n     * @param {?} input\n     * @param {?=} parent\n     * @return {?}\n     */\n    addStyles(input, parent) {\n        /** @type {?} */\n        const builder = this.styleBuilder;\n        /** @type {?} */\n        const useCache = builder.shouldCache;\n        /** @type {?} */\n        let genStyles = this.styleCache.get(input);\n        if (!genStyles || !useCache) {\n            genStyles = builder.buildStyles(input, parent);\n            if (useCache) {\n                this.styleCache.set(input, genStyles);\n            }\n        }\n        this.mru = Object.assign({}, genStyles);\n        this.applyStyleToElement(genStyles);\n        builder.sideEffect(input, genStyles, parent);\n    }\n    /**\n     * Remove generated styles from an element using predefined style builder\n     * @protected\n     * @return {?}\n     */\n    clearStyles() {\n        Object.keys(this.mru).forEach((/**\n         * @param {?} k\n         * @return {?}\n         */\n        k => {\n            this.mru[k] = '';\n        }));\n        this.applyStyleToElement(this.mru);\n        this.mru = {};\n    }\n    /**\n     * Force trigger style updates on DOM element\n     * @protected\n     * @return {?}\n     */\n    triggerUpdate() {\n        this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n    }\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction).\n     *\n     * Check inline style first then check computed (stylesheet) style.\n     * And optionally add the flow value to element's inline style.\n     * @protected\n     * @param {?} target\n     * @param {?=} addIfMissing\n     * @return {?}\n     */\n    getFlexFlowDirection(target, addIfMissing = false) {\n        if (target) {\n            const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n            if (!hasInlineValue && addIfMissing) {\n                /** @type {?} */\n                const style = buildLayoutCSS(value);\n                /** @type {?} */\n                const elements = [target];\n                this.styler.applyStyleToElements(style, elements);\n            }\n            return value.trim();\n        }\n        return 'row';\n    }\n    /**\n     * @protected\n     * @param {?} target\n     * @return {?}\n     */\n    hasWrap(target) {\n        return this.styler.hasWrap(target);\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive element\n     * @protected\n     * @param {?} style\n     * @param {?=} value\n     * @param {?=} element\n     * @return {?}\n     */\n    applyStyleToElement(style, value, element = this.nativeElement) {\n        this.styler.applyStyleToElement(element, style, value);\n    }\n    /**\n     * @protected\n     * @param {?} val\n     * @param {?} bp\n     * @return {?}\n     */\n    setValue(val, bp) {\n        this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n    }\n    /**\n     * @protected\n     * @param {?} input\n     * @return {?}\n     */\n    updateWithValue(input) {\n        if (this.currentValue !== input) {\n            this.addStyles(input);\n            this.currentValue = input;\n        }\n    }\n}\nBaseDirective2.ɵfac = function BaseDirective2_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nBaseDirective2.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BaseDirective2, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/base/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/data/break-points.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n * @type {?}\n */\nconst DEFAULT_BREAKPOINTS = [\n    {\n        alias: 'xs',\n        mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.98px)',\n        priority: 1000,\n    },\n    {\n        alias: 'sm',\n        mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.98px)',\n        priority: 900,\n    },\n    {\n        alias: 'md',\n        mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.98px)',\n        priority: 800,\n    },\n    {\n        alias: 'lg',\n        mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.98px)',\n        priority: 700,\n    },\n    {\n        alias: 'xl',\n        mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.98px)',\n        priority: 600,\n    },\n    {\n        alias: 'lt-sm',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 599.98px)',\n        priority: 950,\n    },\n    {\n        alias: 'lt-md',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 959.98px)',\n        priority: 850,\n    },\n    {\n        alias: 'lt-lg',\n        overlapping: true,\n        mediaQuery: 'screen and (max-width: 1279.98px)',\n        priority: 750,\n    },\n    {\n        alias: 'lt-xl',\n        overlapping: true,\n        priority: 650,\n        mediaQuery: 'screen and (max-width: 1919.98px)',\n    },\n    {\n        alias: 'gt-xs',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 600px)',\n        priority: -950,\n    },\n    {\n        alias: 'gt-sm',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 960px)',\n        priority: -850,\n    }, {\n        alias: 'gt-md',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 1280px)',\n        priority: -750,\n    },\n    {\n        alias: 'gt-lg',\n        overlapping: true,\n        mediaQuery: 'screen and (min-width: 1920px)',\n        priority: -650,\n    }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/data/orientation-break-points.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/* tslint:disable */\n/** @type {?} */\nconst HANDSET_PORTRAIT = '(orientation: portrait) and (max-width: 599.98px)';\n/** @type {?} */\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.98px)';\n/** @type {?} */\nconst TABLET_PORTRAIT = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)';\n/** @type {?} */\nconst TABLET_LANDSCAPE = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)';\n/** @type {?} */\nconst WEB_PORTRAIT = '(orientation: portrait) and (min-width: 840px)';\n/** @type {?} */\nconst WEB_LANDSCAPE = '(orientation: landscape) and (min-width: 1280px)';\n/** @type {?} */\nconst ScreenTypes = {\n    'HANDSET': `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n    'TABLET': `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n    'WEB': `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n    'HANDSET_PORTRAIT': `${HANDSET_PORTRAIT}`,\n    'TABLET_PORTRAIT': `${TABLET_PORTRAIT} `,\n    'WEB_PORTRAIT': `${WEB_PORTRAIT}`,\n    'HANDSET_LANDSCAPE': `${HANDSET_LANDSCAPE}`,\n    'TABLET_LANDSCAPE': `${TABLET_LANDSCAPE}`,\n    'WEB_LANDSCAPE': `${WEB_LANDSCAPE}`\n};\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n * @type {?}\n */\nconst ORIENTATION_BREAKPOINTS = [\n    { 'alias': 'handset', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET },\n    { 'alias': 'handset.landscape', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE },\n    { 'alias': 'handset.portrait', priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT },\n    { 'alias': 'tablet', priority: 2100, 'mediaQuery': ScreenTypes.TABLET },\n    { 'alias': 'tablet.landscape', priority: 2100, 'mediaQuery': ScreenTypes.TABLET_LANDSCAPE },\n    { 'alias': 'tablet.portrait', priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT },\n    { 'alias': 'web', priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping: true },\n    { 'alias': 'web.landscape', priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping: true },\n    { 'alias': 'web.portrait', priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping: true }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/break-point.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/object-extend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nfunction extendObject(dest, ...sources) {\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (let source of sources) {\n        if (source != null) {\n            for (let key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/breakpoint-tools.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\n/**\n * @param {?} part\n * @return {?}\n */\nfunction firstUpperCase(part) {\n    /** @type {?} */\n    let first = part.length > 0 ? part.charAt(0) : '';\n    /** @type {?} */\n    let remainder = (part.length > 1) ? part.slice(1) : '';\n    return first.toUpperCase() + remainder;\n}\n/**\n * Converts snake-case to SnakeCase.\n * @param {?} name Text to UpperCamelCase\n * @return {?}\n */\nfunction camelCase(name) {\n    return name\n        .replace(ALIAS_DELIMITERS, '|')\n        .split('|')\n        .map(firstUpperCase)\n        .join('');\n}\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n * @param {?} list\n * @return {?}\n */\nfunction validateSuffixes(list) {\n    list.forEach((/**\n     * @param {?} bp\n     * @return {?}\n     */\n    (bp) => {\n        if (!bp.suffix) {\n            bp.suffix = camelCase(bp.alias); // create Suffix value based on alias\n            bp.overlapping = !!bp.overlapping; // ensure default value\n        }\n    }));\n    return list;\n}\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n * @param {?} defaults\n * @param {?=} custom\n * @return {?}\n */\nfunction mergeByAlias(defaults, custom = []) {\n    /** @type {?} */\n    const dict = {};\n    defaults.forEach((/**\n     * @param {?} bp\n     * @return {?}\n     */\n    bp => {\n        dict[bp.alias] = bp;\n    }));\n    // Merge custom breakpoints\n    custom.forEach((/**\n     * @param {?} bp\n     * @return {?}\n     */\n    (bp) => {\n        if (dict[bp.alias]) {\n            extendObject(dict[bp.alias], bp);\n        }\n        else {\n            dict[bp.alias] = bp;\n        }\n    }));\n    return validateSuffixes(Object.keys(dict).map((/**\n     * @param {?} k\n     * @return {?}\n     */\n    k => dict[k])));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/break-points-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n * @type {?}\n */\nconst BREAKPOINTS = new InjectionToken('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => {\n        /** @type {?} */\n        const breakpoints = inject(BREAKPOINT);\n        /** @type {?} */\n        const layoutConfig = inject(LAYOUT_CONFIG);\n        /** @type {?} */\n        const bpFlattenArray = [].concat.apply([], (breakpoints || [])\n            .map((/**\n         * @param {?} v\n         * @return {?}\n         */\n        (v) => Array.isArray(v) ? v : [v])));\n        /** @type {?} */\n        const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n            .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n        return mergeByAlias(builtIns, bpFlattenArray);\n    })\n});\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/utils/sort.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * HOF to sort the breakpoints by descending priority\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sortDescendingPriority(a, b) {\n    /** @type {?} */\n    const priorityA = a ? a.priority || 0 : 0;\n    /** @type {?} */\n    const priorityB = b ? b.priority || 0 : 0;\n    return priorityB - priorityA;\n}\n/**\n * HOF to sort the breakpoints by ascending priority\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sortAscendingPriority(a, b) {\n    /** @type {?} */\n    const pA = a.priority || 0;\n    /** @type {?} */\n    const pB = b.priority || 0;\n    return pA - pB;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/break-point-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\nclass BreakPointRegistry {\n    /**\n     * @param {?} list\n     */\n    constructor(list) {\n        /**\n         * Memoized BreakPoint Lookups\n         */\n        this.findByMap = new Map();\n        this.items = [...list].sort(sortAscendingPriority);\n    }\n    /**\n     * Search breakpoints by alias (e.g. gt-xs)\n     * @param {?} alias\n     * @return {?}\n     */\n    findByAlias(alias) {\n        return !alias ? null : this.findWithPredicate(alias, (/**\n         * @param {?} bp\n         * @return {?}\n         */\n        (bp) => bp.alias == alias));\n    }\n    /**\n     * @param {?} query\n     * @return {?}\n     */\n    findByQuery(query) {\n        return this.findWithPredicate(query, (/**\n         * @param {?} bp\n         * @return {?}\n         */\n        (bp) => bp.mediaQuery == query));\n    }\n    /**\n     * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n     * e.g. gt-sm overlaps md, lg, and xl\n     * @return {?}\n     */\n    get overlappings() {\n        return this.items.filter((/**\n         * @param {?} it\n         * @return {?}\n         */\n        it => it.overlapping == true));\n    }\n    /**\n     * Get list of all registered (non-empty) breakpoint aliases\n     * @return {?}\n     */\n    get aliases() {\n        return this.items.map((/**\n         * @param {?} it\n         * @return {?}\n         */\n        it => it.alias));\n    }\n    /**\n     * Aliases are mapped to properties using suffixes\n     * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n     * for property layoutGtSM.\n     * @return {?}\n     */\n    get suffixes() {\n        return this.items.map((/**\n         * @param {?} it\n         * @return {?}\n         */\n        it => !!it.suffix ? it.suffix : ''));\n    }\n    /**\n     * Memoized lookup using custom predicate function\n     * @private\n     * @param {?} key\n     * @param {?} searchFn\n     * @return {?}\n     */\n    findWithPredicate(key, searchFn) {\n        /** @type {?} */\n        let response = this.findByMap.get(key);\n        if (!response) {\n            response = this.items.find(searchFn) || null;\n            this.findByMap.set(key, response);\n        }\n        return response || null;\n    }\n}\nBreakPointRegistry.ɵfac = function BreakPointRegistry_Factory(t) { return new (t || BreakPointRegistry)(ɵngcc0.ɵɵinject(BREAKPOINTS)); };\n/** @nocollapse */ BreakPointRegistry.ɵprov = ɵɵdefineInjectable({ factory: function BreakPointRegistry_Factory() { return new BreakPointRegistry(ɵɵinject(BREAKPOINTS)); }, token: BreakPointRegistry, providedIn: \"root\" });\n/** @nocollapse */\nBreakPointRegistry.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [BREAKPOINTS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BreakPointRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Inject,\n                args: [BREAKPOINTS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/breakpoints/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/match-media/match-media.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\nclass MatchMedia {\n    /**\n     * @param {?} _zone\n     * @param {?} _platformId\n     * @param {?} _document\n     */\n    constructor(_zone, _platformId, _document) {\n        this._zone = _zone;\n        this._platformId = _platformId;\n        this._document = _document;\n        /**\n         * Initialize source with 'all' so all non-responsive APIs trigger style updates\n         */\n        this.source = new BehaviorSubject(new MediaChange(true));\n        this.registry = new Map();\n        this.pendingRemoveListenerFns = [];\n        this._observable$ = this.source.asObservable();\n    }\n    /**\n     * Publish list of all current activations\n     * @return {?}\n     */\n    get activations() {\n        /** @type {?} */\n        const results = [];\n        this.registry.forEach((/**\n         * @param {?} mql\n         * @param {?} key\n         * @return {?}\n         */\n        (mql, key) => {\n            if (mql.matches) {\n                results.push(key);\n            }\n        }));\n        return results;\n    }\n    /**\n     * For the specified mediaQuery?\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    isActive(mediaQuery) {\n        /** @type {?} */\n        const mql = this.registry.get(mediaQuery);\n        return !!mql ? mql.matches : this.registerQuery(mediaQuery).some((/**\n         * @param {?} m\n         * @return {?}\n         */\n        m => m.matches));\n    }\n    /**\n     * External observers can watch for all (or a specific) mql changes.\n     * Typically used by the MediaQueryAdaptor; optionally available to components\n     * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n     *\n     * Use deferred registration process to register breakpoints only on subscription\n     * This logic also enforces logic to register all mediaQueries BEFORE notify\n     * subscribers of notifications.\n     * @param {?=} mqList\n     * @param {?=} filterOthers\n     * @return {?}\n     */\n    observe(mqList, filterOthers = false) {\n        if (mqList && mqList.length) {\n            /** @type {?} */\n            const matchMedia$ = this._observable$.pipe(filter((/**\n             * @param {?} change\n             * @return {?}\n             */\n            (change) => !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1))));\n            /** @type {?} */\n            const registration$ = new Observable((/**\n             * @param {?} observer\n             * @return {?}\n             */\n            (observer) => {\n                // tslint:disable-line:max-line-length\n                /** @type {?} */\n                const matches = this.registerQuery(mqList);\n                if (matches.length) {\n                    /** @type {?} */\n                    const lastChange = (/** @type {?} */ (matches.pop()));\n                    matches.forEach((/**\n                     * @param {?} e\n                     * @return {?}\n                     */\n                    (e) => {\n                        observer.next(e);\n                    }));\n                    this.source.next(lastChange); // last match is cached\n                }\n                observer.complete();\n            }));\n            return merge(registration$, matchMedia$);\n        }\n        return this._observable$;\n    }\n    /**\n     * Based on the BreakPointRegistry provider, register internal listeners for each unique\n     * mediaQuery. Each listener emits specific MediaChange data to observers\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    registerQuery(mediaQuery) {\n        /** @type {?} */\n        const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n        /** @type {?} */\n        const matches = [];\n        buildQueryCss(list, this._document);\n        list.forEach((/**\n         * @param {?} query\n         * @return {?}\n         */\n        (query) => {\n            /** @type {?} */\n            const onMQLEvent = (/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => {\n                this._zone.run((/**\n                 * @return {?}\n                 */\n                () => this.source.next(new MediaChange(e.matches, query))));\n            });\n            /** @type {?} */\n            let mql = this.registry.get(query);\n            if (!mql) {\n                mql = this.buildMQL(query);\n                mql.addListener(onMQLEvent);\n                this.pendingRemoveListenerFns.push((/**\n                 * @return {?}\n                 */\n                () => (/** @type {?} */ (mql)).removeListener(onMQLEvent)));\n                this.registry.set(query, mql);\n            }\n            if (mql.matches) {\n                matches.push(new MediaChange(true, query));\n            }\n        }));\n        return matches;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        let fn;\n        while (fn = this.pendingRemoveListenerFns.pop()) {\n            fn();\n        }\n    }\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     * @protected\n     * @param {?} query\n     * @return {?}\n     */\n    buildMQL(query) {\n        return constructMql(query, isPlatformBrowser(this._platformId));\n    }\n}\nMatchMedia.ɵfac = function MatchMedia_Factory(t) { return new (t || MatchMedia)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */ MatchMedia.ɵprov = ɵɵdefineInjectable({ factory: function MatchMedia_Factory() { return new MatchMedia(ɵɵinject(NgZone), ɵɵinject(PLATFORM_ID), ɵɵinject(DOCUMENT)); }, token: MatchMedia, providedIn: \"root\" });\n/** @nocollapse */\nMatchMedia.ctorParameters = () => [\n    { type: NgZone },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatchMedia, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n * @type {?}\n */\nconst ALL_STYLES = {};\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param {?} mediaQueries\n * @param {?} _document\n * @return {?}\n */\nfunction buildQueryCss(mediaQueries, _document) {\n    /** @type {?} */\n    const list = mediaQueries.filter((/**\n     * @param {?} it\n     * @return {?}\n     */\n    it => !ALL_STYLES[it]));\n    if (list.length > 0) {\n        /** @type {?} */\n        const query = list.join(', ');\n        try {\n            /** @type {?} */\n            const styleEl = _document.createElement('style');\n            styleEl.setAttribute('type', 'text/css');\n            if (!((/** @type {?} */ (styleEl))).styleSheet) {\n                /** @type {?} */\n                const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n                styleEl.appendChild(_document.createTextNode(cssText));\n            }\n            (/** @type {?} */ (_document.head)).appendChild(styleEl);\n            // Store in private global registry\n            list.forEach((/**\n             * @param {?} mq\n             * @return {?}\n             */\n            mq => ALL_STYLES[mq] = styleEl));\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\n/**\n * @param {?} query\n * @param {?} isBrowser\n * @return {?}\n */\nfunction constructMql(query, isBrowser) {\n    /** @type {?} */\n    const canListen = isBrowser && !!((/** @type {?} */ (window))).matchMedia('all').addListener;\n    return canListen ? ((/** @type {?} */ (window))).matchMedia(query) : (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: (/**\n         * @return {?}\n         */\n        () => {\n        }),\n        removeListener: (/**\n         * @return {?}\n         */\n        () => {\n        }),\n        onchange: null,\n        /**\n         * @return {?}\n         */\n        addEventListener() {\n        },\n        /**\n         * @return {?}\n         */\n        removeEventListener() {\n        },\n        /**\n         * @return {?}\n         */\n        dispatchEvent() {\n            return false;\n        }\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/match-media/mock/mock-match-media.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\nclass MockMatchMedia extends MatchMedia {\n    // Allow fallback to overlapping mediaQueries\n    /**\n     * @param {?} _zone\n     * @param {?} _platformId\n     * @param {?} _document\n     * @param {?} _breakpoints\n     */\n    constructor(_zone, _platformId, _document, _breakpoints) {\n        super(_zone, _platformId, _document);\n        this._breakpoints = _breakpoints;\n        this.autoRegisterQueries = true; // Used for testing BreakPoint registrations\n        // Used for testing BreakPoint registrations\n        this.useOverlaps = false; // Allow fallback to overlapping mediaQueries\n    }\n    /**\n     * Easy method to clear all listeners for all mediaQueries\n     * @return {?}\n     */\n    clearAll() {\n        this.registry.forEach((/**\n         * @param {?} mql\n         * @return {?}\n         */\n        (mql) => {\n            ((/** @type {?} */ (mql))).destroy();\n        }));\n        this.registry.clear();\n        this.useOverlaps = false;\n    }\n    /**\n     * Feature to support manual, simulated activation of a mediaQuery.\n     * @param {?} mediaQuery\n     * @param {?=} useOverlaps\n     * @return {?}\n     */\n    activate(mediaQuery, useOverlaps = false) {\n        useOverlaps = useOverlaps || this.useOverlaps;\n        mediaQuery = this._validateQuery(mediaQuery);\n        if (useOverlaps || !this.isActive(mediaQuery)) {\n            this._deactivateAll();\n            this._registerMediaQuery(mediaQuery);\n            this._activateWithOverlaps(mediaQuery, useOverlaps);\n        }\n        return this.hasActivated;\n    }\n    /**\n     * Converts an optional mediaQuery alias to a specific, valid mediaQuery\n     * @param {?} queryOrAlias\n     * @return {?}\n     */\n    _validateQuery(queryOrAlias) {\n        /** @type {?} */\n        const bp = this._breakpoints.findByAlias(queryOrAlias);\n        return (bp && bp.mediaQuery) || queryOrAlias;\n    }\n    /**\n     * Manually onMediaChange any overlapping mediaQueries to simulate\n     * similar functionality in the window.matchMedia()\n     * @private\n     * @param {?} mediaQuery\n     * @param {?} useOverlaps\n     * @return {?}\n     */\n    _activateWithOverlaps(mediaQuery, useOverlaps) {\n        if (useOverlaps) {\n            /** @type {?} */\n            const bp = this._breakpoints.findByQuery(mediaQuery);\n            /** @type {?} */\n            const alias = bp ? bp.alias : 'unknown';\n            // Simulate activation of overlapping lt-<XXX> ranges\n            switch (alias) {\n                case 'lg':\n                    this._activateByAlias(['lt-xl']);\n                    break;\n                case 'md':\n                    this._activateByAlias(['lt-xl', 'lt-lg']);\n                    break;\n                case 'sm':\n                    this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md']);\n                    break;\n                case 'xs':\n                    this._activateByAlias(['lt-xl', 'lt-lg', 'lt-md', 'lt-sm']);\n                    break;\n            }\n            // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n            switch (alias) {\n                case 'xl':\n                    this._activateByAlias(['gt-lg', 'gt-md', 'gt-sm', 'gt-xs']);\n                    break;\n                case 'lg':\n                    this._activateByAlias(['gt-md', 'gt-sm', 'gt-xs']);\n                    break;\n                case 'md':\n                    this._activateByAlias(['gt-sm', 'gt-xs']);\n                    break;\n                case 'sm':\n                    this._activateByAlias(['gt-xs']);\n                    break;\n            }\n        }\n        // Activate last since the responsiveActivation is watching *this* mediaQuery\n        return this._activateByQuery(mediaQuery);\n    }\n    /**\n     *\n     * @private\n     * @param {?} aliases\n     * @return {?}\n     */\n    _activateByAlias(aliases) {\n        /** @type {?} */\n        const activate = (/**\n         * @param {?} alias\n         * @return {?}\n         */\n        (alias) => {\n            /** @type {?} */\n            const bp = this._breakpoints.findByAlias(alias);\n            this._activateByQuery(bp ? bp.mediaQuery : alias);\n        });\n        aliases.forEach(activate);\n    }\n    /**\n     *\n     * @private\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    _activateByQuery(mediaQuery) {\n        if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n            this._registerMediaQuery(mediaQuery);\n        }\n        /** @type {?} */\n        const mql = (/** @type {?} */ (this.registry.get(mediaQuery)));\n        if (mql && !this.isActive(mediaQuery)) {\n            this.registry.set(mediaQuery, mql.activate());\n        }\n        return this.hasActivated;\n    }\n    /**\n     * Deactivate all current MQLs and reset the buffer\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @return {THIS}\n     */\n    _deactivateAll() {\n        (/** @type {?} */ (this)).registry.forEach((/**\n         * @param {?} it\n         * @return {?}\n         */\n        (it) => {\n            ((/** @type {?} */ (it))).deactivate();\n        }));\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Insure the mediaQuery is registered with MatchMedia\n     * @private\n     * @param {?} mediaQuery\n     * @return {?}\n     */\n    _registerMediaQuery(mediaQuery) {\n        if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n            this.registerQuery(mediaQuery);\n        }\n    }\n    /**\n     * Call window.matchMedia() to build a MediaQueryList; which\n     * supports 0..n listeners for activation/deactivation\n     * @protected\n     * @param {?} query\n     * @return {?}\n     */\n    buildMQL(query) {\n        return new MockMediaQueryList(query);\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    get hasActivated() {\n        return this.activations.length > 0;\n    }\n}\nMockMatchMedia.ɵfac = function MockMatchMedia_Factory(t) { return new (t || MockMatchMedia)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(BreakPointRegistry)); };\nMockMatchMedia.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MockMatchMedia, factory: MockMatchMedia.ɵfac });\n/** @nocollapse */\nMockMatchMedia.ctorParameters = () => [\n    { type: NgZone },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: BreakPointRegistry }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MockMatchMedia, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: BreakPointRegistry }]; }, null); })();\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nclass MockMediaQueryList {\n    /**\n     * @param {?} _mediaQuery\n     */\n    constructor(_mediaQuery) {\n        this._mediaQuery = _mediaQuery;\n        this._isActive = false;\n        this._listeners = [];\n        this.onchange = null;\n    }\n    /**\n     * @return {?}\n     */\n    get matches() {\n        return this._isActive;\n    }\n    /**\n     * @return {?}\n     */\n    get media() {\n        return this._mediaQuery;\n    }\n    /**\n     * Destroy the current list by deactivating the\n     * listeners and clearing the internal list\n     * @return {?}\n     */\n    destroy() {\n        this.deactivate();\n        this._listeners = [];\n    }\n    /**\n     * Notify all listeners that 'matches === TRUE'\n     * @return {?}\n     */\n    activate() {\n        if (!this._isActive) {\n            this._isActive = true;\n            this._listeners.forEach((/**\n             * @param {?} callback\n             * @return {?}\n             */\n            (callback) => {\n                /** @type {?} */\n                const cb = (/** @type {?} */ (callback));\n                cb.call(this, (/** @type {?} */ ({ matches: this.matches, media: this.media })));\n            }));\n        }\n        return this;\n    }\n    /**\n     * Notify all listeners that 'matches === false'\n     * @return {?}\n     */\n    deactivate() {\n        if (this._isActive) {\n            this._isActive = false;\n            this._listeners.forEach((/**\n             * @param {?} callback\n             * @return {?}\n             */\n            (callback) => {\n                /** @type {?} */\n                const cb = (/** @type {?} */ (callback));\n                cb.call(this, (/** @type {?} */ ({ matches: this.matches, media: this.media })));\n            }));\n        }\n        return this;\n    }\n    /**\n     * Add a listener to our internal list to activate later\n     * @param {?} listener\n     * @return {?}\n     */\n    addListener(listener) {\n        if (this._listeners.indexOf(listener) === -1) {\n            this._listeners.push(listener);\n        }\n        if (this._isActive) {\n            /** @type {?} */\n            const cb = (/** @type {?} */ (listener));\n            cb.call(this, (/** @type {?} */ ({ matches: this.matches, media: this.media })));\n        }\n    }\n    /**\n     * Don't need to remove listeners in the testing environment\n     * @param {?} _\n     * @return {?}\n     */\n    removeListener(_) {\n    }\n    /**\n     * @param {?} _\n     * @param {?} __\n     * @param {?=} ___\n     * @return {?}\n     */\n    addEventListener(_, __, ___) {\n    }\n    /**\n     * @param {?} _\n     * @param {?} __\n     * @param {?=} ___\n     * @return {?}\n     */\n    removeEventListener(_, __, ___) {\n    }\n    /**\n     * @param {?} _\n     * @return {?}\n     */\n    dispatchEvent(_) {\n        return false;\n    }\n}\n/**\n * Pre-configured provider for MockMatchMedia\n * @type {?}\n */\nconst MockMatchMediaProvider = {\n    // tslint:disable-line:variable-name\n    provide: MatchMedia,\n    useClass: MockMatchMedia\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/match-media/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-marshaller/print-hook.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst PRINT = 'print';\n/** @type {?} */\nconst BREAKPOINT_PRINT = {\n    alias: PRINT,\n    mediaQuery: PRINT,\n    priority: 1000\n};\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\nclass PrintHook {\n    /**\n     * @param {?} breakpoints\n     * @param {?} layoutConfig\n     * @param {?} _document\n     */\n    constructor(breakpoints, layoutConfig, _document) {\n        this.breakpoints = breakpoints;\n        this.layoutConfig = layoutConfig;\n        this._document = _document;\n        // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`\n        //  and `afterprint` event listeners.\n        this.registeredBeforeAfterPrintHooks = false;\n        // isPrintingBeforeAfterEvent is used to track if we are printing from within\n        // a `beforeprint` event handler. This prevents the typicall `stopPrinting`\n        // form `interceptEvents` so that printing is not stopped while the dialog\n        // is still open. This is an extension of the `isPrinting` property on\n        // browsers which support `beforeprint` and `afterprint` events.\n        this.isPrintingBeforeAfterEvent = false;\n        this.beforePrintEventListeners = [];\n        this.afterPrintEventListeners = [];\n        /**\n         * Is this service currently in Print-mode ?\n         */\n        this.isPrinting = false;\n        this.queue = new PrintQueue();\n        this.deactivations = [];\n    }\n    /**\n     * Add 'print' mediaQuery: to listen for matchMedia activations\n     * @param {?} queries\n     * @return {?}\n     */\n    withPrintQuery(queries) {\n        return [...queries, PRINT];\n    }\n    /**\n     * Is the MediaChange event for any 'print' \\@media\n     * @param {?} e\n     * @return {?}\n     */\n    isPrintEvent(e) {\n        return e.mediaQuery.startsWith(PRINT);\n    }\n    /**\n     * What is the desired mqAlias to use while printing?\n     * @return {?}\n     */\n    get printAlias() {\n        return this.layoutConfig.printWithBreakpoints || [];\n    }\n    /**\n     * Lookup breakpoints associated with print aliases.\n     * @return {?}\n     */\n    get printBreakPoints() {\n        return (/** @type {?} */ (this.printAlias\n            .map((/**\n         * @param {?} alias\n         * @return {?}\n         */\n        alias => this.breakpoints.findByAlias(alias)))\n            .filter((/**\n         * @param {?} bp\n         * @return {?}\n         */\n        bp => bp !== null))));\n    }\n    /**\n     * Lookup breakpoint associated with mediaQuery\n     * @param {?} __0\n     * @return {?}\n     */\n    getEventBreakpoints({ mediaQuery }) {\n        /** @type {?} */\n        const bp = this.breakpoints.findByQuery(mediaQuery);\n        /** @type {?} */\n        const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n        return list.sort(sortDescendingPriority);\n    }\n    /**\n     * Update event with printAlias mediaQuery information\n     * @param {?} event\n     * @return {?}\n     */\n    updateEvent(event) {\n        /** @type {?} */\n        let bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (this.isPrintEvent(event)) {\n            // Reset from 'print' to first (highest priority) print breakpoint\n            bp = this.getEventBreakpoints(event)[0];\n            event.mediaQuery = bp ? bp.mediaQuery : '';\n        }\n        return mergeAlias(event, bp);\n    }\n    // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can\n    // trigger print styles synchronously and apply proper layout styles.\n    // It is a noop if the hooks have already been registered or if the document's\n    // `defaultView` is not available.\n    /**\n     * @private\n     * @param {?} target\n     * @return {?}\n     */\n    registerBeforeAfterPrintHooks(target) {\n        // `defaultView` may be null when rendering on the server or in other contexts.\n        if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) {\n            return;\n        }\n        this.registeredBeforeAfterPrintHooks = true;\n        /** @type {?} */\n        const beforePrintListener = (/**\n         * @return {?}\n         */\n        () => {\n            // If we aren't already printing, start printing and update the styles as\n            // if there was a regular print `MediaChange`(from matchMedia).\n            if (!this.isPrinting) {\n                this.isPrintingBeforeAfterEvent = true;\n                this.startPrinting(target, this.getEventBreakpoints(new MediaChange(true, PRINT)));\n                target.updateStyles();\n            }\n        });\n        /** @type {?} */\n        const afterPrintListener = (/**\n         * @return {?}\n         */\n        () => {\n            // If we aren't already printing, start printing and update the styles as\n            // if there was a regular print `MediaChange`(from matchMedia).\n            this.isPrintingBeforeAfterEvent = false;\n            if (this.isPrinting) {\n                this.stopPrinting(target);\n                target.updateStyles();\n            }\n        });\n        // Could we have teardown logic to remove if there are no print listeners being used?\n        this._document.defaultView.addEventListener('beforeprint', beforePrintListener);\n        this._document.defaultView.addEventListener('afterprint', afterPrintListener);\n        this.beforePrintEventListeners.push(beforePrintListener);\n        this.afterPrintEventListeners.push(afterPrintListener);\n    }\n    /**\n     * Prepare RxJS filter operator with partial application\n     * @param {?} target\n     * @return {?} pipeable filter predicate\n     */\n    interceptEvents(target) {\n        this.registerBeforeAfterPrintHooks(target);\n        return (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this.isPrintEvent(event)) {\n                if (event.matches && !this.isPrinting) {\n                    this.startPrinting(target, this.getEventBreakpoints(event));\n                    target.updateStyles();\n                }\n                else if (!event.matches && this.isPrinting && !this.isPrintingBeforeAfterEvent) {\n                    this.stopPrinting(target);\n                    target.updateStyles();\n                }\n            }\n            else {\n                this.collectActivations(event);\n            }\n        });\n    }\n    /**\n     * Stop mediaChange event propagation in event streams\n     * @return {?}\n     */\n    blockPropagation() {\n        return (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            return !(this.isPrinting || this.isPrintEvent(event));\n        });\n    }\n    /**\n     * Save current activateBreakpoints (for later restore)\n     * and substitute only the printAlias breakpoint\n     * @protected\n     * @param {?} target\n     * @param {?} bpList\n     * @return {?}\n     */\n    startPrinting(target, bpList) {\n        this.isPrinting = true;\n        target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n    }\n    /**\n     * For any print de-activations, reset the entire print queue\n     * @protected\n     * @param {?} target\n     * @return {?}\n     */\n    stopPrinting(target) {\n        target.activatedBreakpoints = this.deactivations;\n        this.deactivations = [];\n        this.queue.clear();\n        this.isPrinting = false;\n    }\n    /**\n     * To restore pre-Print Activations, we must capture the proper\n     * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n     * is supported; so 'print' mediaQuery activations are used as a fallback\n     * in browsers without `beforeprint` support.\n     *\n     * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n     *\n     * Let's capture all de-activations using the following logic:\n     *\n     *  When not printing:\n     *    - clear cache when activating non-print breakpoint\n     *    - update cache (and sort) when deactivating\n     *\n     *  When printing:\n     *    - sort and save when starting print\n     *    - restore as activatedTargets and clear when stop printing\n     * @param {?} event\n     * @return {?}\n     */\n    collectActivations(event) {\n        if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {\n            if (!event.matches) {\n                /** @type {?} */\n                const bp = this.breakpoints.findByQuery(event.mediaQuery);\n                if (bp) { // Deactivating a breakpoint\n                    this.deactivations.push(bp);\n                    this.deactivations.sort(sortDescendingPriority);\n                }\n            }\n            else if (!this.isPrintingBeforeAfterEvent) {\n                // Only clear deactivations if we aren't printing from a `beforeprint` event.\n                // Otherwise this will clear before `stopPrinting()` is called to restore\n                // the pre-Print Activations.\n                this.deactivations = [];\n            }\n        }\n    }\n    /**\n     * Teardown logic for the service.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._document.defaultView) {\n            this.beforePrintEventListeners.forEach((/**\n             * @param {?} l\n             * @return {?}\n             */\n            l => this._document.defaultView.removeEventListener('beforeprint', l)));\n            this.afterPrintEventListeners.forEach((/**\n             * @param {?} l\n             * @return {?}\n             */\n            l => this._document.defaultView.removeEventListener('afterprint', l)));\n        }\n    }\n}\nPrintHook.ɵfac = function PrintHook_Factory(t) { return new (t || PrintHook)(ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(LAYOUT_CONFIG), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */ PrintHook.ɵprov = ɵɵdefineInjectable({ factory: function PrintHook_Factory() { return new PrintHook(ɵɵinject(BreakPointRegistry), ɵɵinject(LAYOUT_CONFIG), ɵɵinject(DOCUMENT)); }, token: PrintHook, providedIn: \"root\" });\n/** @nocollapse */\nPrintHook.ctorParameters = () => [\n    { type: BreakPointRegistry },\n    { type: undefined, decorators: [{ type: Inject, args: [LAYOUT_CONFIG,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PrintHook, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: BreakPointRegistry }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [LAYOUT_CONFIG]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n    constructor() {\n        /**\n         * Sorted queue with prioritized print breakpoints\n         */\n        this.printBreakpoints = [];\n    }\n    /**\n     * @param {?} bpList\n     * @return {?}\n     */\n    addPrintBreakpoints(bpList) {\n        bpList.push(BREAKPOINT_PRINT);\n        bpList.sort(sortDescendingPriority);\n        bpList.forEach((/**\n         * @param {?} bp\n         * @return {?}\n         */\n        bp => this.addBreakpoint(bp)));\n        return this.printBreakpoints;\n    }\n    /**\n     * Add Print breakpoint to queue\n     * @param {?} bp\n     * @return {?}\n     */\n    addBreakpoint(bp) {\n        if (!!bp) {\n            /** @type {?} */\n            const bpInList = this.printBreakpoints.find((/**\n             * @param {?} it\n             * @return {?}\n             */\n            it => it.mediaQuery === bp.mediaQuery));\n            if (bpInList === undefined) {\n                // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n                // register as highest priority in the queue\n                this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n                    : [...this.printBreakpoints, bp];\n            }\n        }\n    }\n    /**\n     * Restore original activated breakpoints and clear internal caches\n     * @return {?}\n     */\n    clear() {\n        this.printBreakpoints = [];\n    }\n}\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n/**\n * Only support intercept queueing if the Breakpoint is a print \\@media query\n * @param {?} bp\n * @return {?}\n */\nfunction isPrintBreakPoint(bp) {\n    return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/utils/array.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Wraps the provided value in an array, unless the provided value is an array.\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-observer/media-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n * \\@usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '\\@angular/flex-layout';\n *\n * \\@Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\nclass MediaObserver {\n    /**\n     * @param {?} breakpoints\n     * @param {?} matchMedia\n     * @param {?} hook\n     */\n    constructor(breakpoints, matchMedia, hook) {\n        this.breakpoints = breakpoints;\n        this.matchMedia = matchMedia;\n        this.hook = hook;\n        /**\n         * Filter MediaChange notifications for overlapping breakpoints\n         */\n        this.filterOverlaps = false;\n        this.destroyed$ = new Subject();\n        this._media$ = this.watchActivations();\n        this.media$ = this._media$.pipe(filter((/**\n         * @param {?} changes\n         * @return {?}\n         */\n        (changes) => changes.length > 0)), map((/**\n         * @param {?} changes\n         * @return {?}\n         */\n        (changes) => changes[0])));\n    }\n    /**\n     * Completes the active subject, signalling to all complete for all\n     * MediaObserver subscribers\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n    // ************************************************\n    // Public Methods\n    // ************************************************\n    /**\n     * Observe changes to current activation 'list'\n     * @return {?}\n     */\n    asObservable() {\n        return this._media$;\n    }\n    /**\n     * Allow programmatic query to determine if one or more media query/alias match\n     * the current viewport size.\n     * @param {?} value One or more media queries (or aliases) to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isActive(value) {\n        /** @type {?} */\n        const aliases = splitQueries(coerceArray(value));\n        return aliases.some((/**\n         * @param {?} alias\n         * @return {?}\n         */\n        alias => {\n            /** @type {?} */\n            const query = toMediaQuery(alias, this.breakpoints);\n            return query !== null && this.matchMedia.isActive(query);\n        }));\n    }\n    // ************************************************\n    // Internal Methods\n    // ************************************************\n    /**\n     * Register all the mediaQueries registered in the BreakPointRegistry\n     * This is needed so subscribers can be auto-notified of all standard, registered\n     * mediaQuery activations\n     * @private\n     * @return {?}\n     */\n    watchActivations() {\n        /** @type {?} */\n        const queries = this.breakpoints.items.map((/**\n         * @param {?} bp\n         * @return {?}\n         */\n        bp => bp.mediaQuery));\n        return this.buildObservable(queries);\n    }\n    /**\n     * Only pass/announce activations (not de-activations)\n     *\n     * Since multiple-mediaQueries can be activation in a cycle,\n     * gather all current activations into a single list of changes to observers\n     *\n     * Inject associated (if any) alias information into the MediaChange event\n     * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     * - Exclude print activations that do not have an associated mediaQuery\n     *\n     * NOTE: the raw MediaChange events [from MatchMedia] do not\n     *       contain important alias information; as such this info\n     *       must be injected into the MediaChange\n     * @private\n     * @param {?} mqList\n     * @return {?}\n     */\n    buildObservable(mqList) {\n        /** @type {?} */\n        const hasChanges = (/**\n         * @param {?} changes\n         * @return {?}\n         */\n        (changes) => {\n            /** @type {?} */\n            const isValidQuery = (/**\n             * @param {?} change\n             * @return {?}\n             */\n            (change) => (change.mediaQuery.length > 0));\n            return (changes.filter(isValidQuery).length > 0);\n        });\n        /** @type {?} */\n        const excludeOverlaps = (/**\n         * @param {?} changes\n         * @return {?}\n         */\n        (changes) => {\n            return !this.filterOverlaps ? changes : changes.filter((/**\n             * @param {?} change\n             * @return {?}\n             */\n            change => {\n                /** @type {?} */\n                const bp = this.breakpoints.findByQuery(change.mediaQuery);\n                return !bp ? true : !bp.overlapping;\n            }));\n        });\n        /**\n         */\n        return this.matchMedia\n            .observe(this.hook.withPrintQuery(mqList))\n            .pipe(filter((/**\n         * @param {?} change\n         * @return {?}\n         */\n        (change) => change.matches)), debounceTime(0, asapScheduler), switchMap((/**\n         * @param {?} _\n         * @return {?}\n         */\n        _ => of(this.findAllActivations()))), map(excludeOverlaps), filter(hasChanges), takeUntil(this.destroyed$));\n    }\n    /**\n     * Find all current activations and prepare single list of activations\n     * sorted by descending priority.\n     * @private\n     * @return {?}\n     */\n    findAllActivations() {\n        /** @type {?} */\n        const mergeMQAlias = (/**\n         * @param {?} change\n         * @return {?}\n         */\n        (change) => {\n            /** @type {?} */\n            let bp = this.breakpoints.findByQuery(change.mediaQuery);\n            return mergeAlias(change, bp);\n        });\n        /** @type {?} */\n        const replaceWithPrintAlias = (/**\n         * @param {?} change\n         * @return {?}\n         */\n        (change) => {\n            return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n        });\n        return this.matchMedia\n            .activations\n            .map((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => new MediaChange(true, query)))\n            .map(replaceWithPrintAlias)\n            .map(mergeMQAlias)\n            .sort(sortDescendingPriority);\n    }\n}\nMediaObserver.ɵfac = function MediaObserver_Factory(t) { return new (t || MediaObserver)(ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(MatchMedia), ɵngcc0.ɵɵinject(PrintHook)); };\n/** @nocollapse */ MediaObserver.ɵprov = ɵɵdefineInjectable({ factory: function MediaObserver_Factory() { return new MediaObserver(ɵɵinject(BreakPointRegistry), ɵɵinject(MatchMedia), ɵɵinject(PrintHook)); }, token: MediaObserver, providedIn: \"root\" });\n/** @nocollapse */\nMediaObserver.ctorParameters = () => [\n    { type: BreakPointRegistry },\n    { type: MatchMedia },\n    { type: PrintHook }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: BreakPointRegistry }, { type: MatchMedia }, { type: PrintHook }]; }, null); })();\n/**\n * Find associated breakpoint (if any)\n * @param {?} query\n * @param {?} locator\n * @return {?}\n */\nfunction toMediaQuery(query, locator) {\n    /** @type {?} */\n    const bp = locator.findByAlias(query) || locator.findByQuery(query);\n    return bp ? bp.mediaQuery : null;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    (query) => query.split(',')))\n        .reduce((/**\n     * @param {?} a1\n     * @param {?} a2\n     * @return {?}\n     */\n    (a1, a2) => a1.concat(a2)))\n        .map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    query => query.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-observer/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-trigger/media-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class\n */\nclass MediaTrigger {\n    /**\n     * @param {?} breakpoints\n     * @param {?} matchMedia\n     * @param {?} layoutConfig\n     * @param {?} _platformId\n     * @param {?} _document\n     */\n    constructor(breakpoints, matchMedia, layoutConfig, _platformId, _document) {\n        this.breakpoints = breakpoints;\n        this.matchMedia = matchMedia;\n        this.layoutConfig = layoutConfig;\n        this._platformId = _platformId;\n        this._document = _document;\n        this.hasCachedRegistryMatches = false;\n        this.originalActivations = [];\n        this.originalRegistry = new Map();\n    }\n    /**\n     * Manually activate range of breakpoints\n     * @param {?} list array of mediaQuery or alias strings\n     * @return {?}\n     */\n    activate(list) {\n        list = list.map((/**\n         * @param {?} it\n         * @return {?}\n         */\n        it => it.trim())); // trim queries\n        this.saveActivations();\n        this.deactivateAll();\n        this.setActivations(list);\n        this.prepareAutoRestore();\n    }\n    /**\n     * Restore original, 'real' breakpoints and emit events\n     * to trigger stream notification\n     * @return {?}\n     */\n    restore() {\n        if (this.hasCachedRegistryMatches) {\n            /** @type {?} */\n            const extractQuery = (/**\n             * @param {?} change\n             * @return {?}\n             */\n            (change) => change.mediaQuery);\n            /** @type {?} */\n            const list = this.originalActivations.map(extractQuery);\n            try {\n                this.deactivateAll();\n                this.restoreRegistryMatches();\n                this.setActivations(list);\n            }\n            finally {\n                this.originalActivations = [];\n                if (this.resizeSubscription) {\n                    this.resizeSubscription.unsubscribe();\n                }\n            }\n        }\n    }\n    // ************************************************\n    // Internal Methods\n    // ************************************************\n    /**\n     * Whenever window resizes, immediately auto-restore original\n     * activations (if we are simulating activations)\n     * @private\n     * @return {?}\n     */\n    prepareAutoRestore() {\n        /** @type {?} */\n        const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n        /** @type {?} */\n        const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n        if (enableAutoRestore) {\n            /** @type {?} */\n            const resize$ = fromEvent(window, 'resize').pipe(take(1));\n            this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n        }\n    }\n    /**\n     * Notify all matchMedia subscribers of de-activations\n     *\n     * Note: we must force 'matches' updates for\n     *       future matchMedia::activation lookups\n     * @private\n     * @return {?}\n     */\n    deactivateAll() {\n        /** @type {?} */\n        const list = this.currentActivations;\n        this.forceRegistryMatches(list, false);\n        this.simulateMediaChanges(list, false);\n    }\n    /**\n     * Cache current activations as sorted, prioritized list of MediaChanges\n     * @private\n     * @return {?}\n     */\n    saveActivations() {\n        if (!this.hasCachedRegistryMatches) {\n            /** @type {?} */\n            const toMediaChange = (/**\n             * @param {?} query\n             * @return {?}\n             */\n            (query) => new MediaChange(true, query));\n            /** @type {?} */\n            const mergeMQAlias = (/**\n             * @param {?} change\n             * @return {?}\n             */\n            (change) => {\n                /** @type {?} */\n                const bp = this.breakpoints.findByQuery(change.mediaQuery);\n                return mergeAlias(change, bp);\n            });\n            this.originalActivations = this.currentActivations\n                .map(toMediaChange)\n                .map(mergeMQAlias)\n                .sort(sortDescendingPriority);\n            this.cacheRegistryMatches();\n        }\n    }\n    /**\n     * Force set manual activations for specified mediaQuery list\n     * @private\n     * @param {?} list\n     * @return {?}\n     */\n    setActivations(list) {\n        if (!!this.originalRegistry) {\n            this.forceRegistryMatches(list, true);\n        }\n        this.simulateMediaChanges(list);\n    }\n    /**\n     * For specified mediaQuery list manually simulate activations or deactivations\n     * @private\n     * @param {?} queries\n     * @param {?=} matches\n     * @return {?}\n     */\n    simulateMediaChanges(queries, matches = true) {\n        /** @type {?} */\n        const toMediaQuery = (/**\n         * @param {?} query\n         * @return {?}\n         */\n        (query) => {\n            /** @type {?} */\n            const locator = this.breakpoints;\n            /** @type {?} */\n            const bp = locator.findByAlias(query) || locator.findByQuery(query);\n            return bp ? bp.mediaQuery : query;\n        });\n        /** @type {?} */\n        const emitChangeEvent = (/**\n         * @param {?} query\n         * @return {?}\n         */\n        (query) => this.emitChangeEvent(matches, query));\n        queries.map(toMediaQuery).forEach(emitChangeEvent);\n    }\n    /**\n     * Replace current registry with simulated registry...\n     * Note: this is required since MediaQueryList::matches is 'readOnly'\n     * @private\n     * @param {?} queries\n     * @param {?} matches\n     * @return {?}\n     */\n    forceRegistryMatches(queries, matches) {\n        /** @type {?} */\n        const registry = new Map();\n        queries.forEach((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => {\n            registry.set(query, (/** @type {?} */ ({ matches })));\n        }));\n        this.matchMedia.registry = registry;\n    }\n    /**\n     * Save current MatchMedia::registry items.\n     * @private\n     * @return {?}\n     */\n    cacheRegistryMatches() {\n        /** @type {?} */\n        const target = this.originalRegistry;\n        target.clear();\n        this.matchMedia.registry.forEach((/**\n         * @param {?} value\n         * @param {?} key\n         * @return {?}\n         */\n        (value, key) => {\n            target.set(key, value);\n        }));\n        this.hasCachedRegistryMatches = true;\n    }\n    /**\n     * Restore original, 'true' registry\n     * @private\n     * @return {?}\n     */\n    restoreRegistryMatches() {\n        /** @type {?} */\n        const target = this.matchMedia.registry;\n        target.clear();\n        this.originalRegistry.forEach((/**\n         * @param {?} value\n         * @param {?} key\n         * @return {?}\n         */\n        (value, key) => {\n            target.set(key, value);\n        }));\n        this.originalRegistry.clear();\n        this.hasCachedRegistryMatches = false;\n    }\n    /**\n     * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n     * @private\n     * @param {?} matches\n     * @param {?} query\n     * @return {?}\n     */\n    emitChangeEvent(matches, query) {\n        this.matchMedia.source.next(new MediaChange(matches, query));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get currentActivations() {\n        return this.matchMedia.activations;\n    }\n}\nMediaTrigger.ɵfac = function MediaTrigger_Factory(t) { return new (t || MediaTrigger)(ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(MatchMedia), ɵngcc0.ɵɵinject(LAYOUT_CONFIG), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */ MediaTrigger.ɵprov = ɵɵdefineInjectable({ factory: function MediaTrigger_Factory() { return new MediaTrigger(ɵɵinject(BreakPointRegistry), ɵɵinject(MatchMedia), ɵɵinject(LAYOUT_CONFIG), ɵɵinject(PLATFORM_ID), ɵɵinject(DOCUMENT)); }, token: MediaTrigger, providedIn: \"root\" });\n/** @nocollapse */\nMediaTrigger.ctorParameters = () => [\n    { type: BreakPointRegistry },\n    { type: MatchMedia },\n    { type: undefined, decorators: [{ type: Inject, args: [LAYOUT_CONFIG,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaTrigger, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: BreakPointRegistry }, { type: MatchMedia }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [LAYOUT_CONFIG]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-trigger/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/utils/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: utils/auto-prefixer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n * @param {?} target\n * @return {?}\n */\nfunction applyCssPrefixes(target) {\n    for (let key in target) {\n        /** @type {?} */\n        let value = target[key] || '';\n        switch (key) {\n            case 'display':\n                if (value === 'flex') {\n                    target['display'] = [\n                        '-webkit-flex',\n                        'flex'\n                    ];\n                }\n                else if (value === 'inline-flex') {\n                    target['display'] = [\n                        '-webkit-inline-flex',\n                        'inline-flex'\n                    ];\n                }\n                else {\n                    target['display'] = value;\n                }\n                break;\n            case 'align-items':\n            case 'align-self':\n            case 'align-content':\n            case 'flex':\n            case 'flex-basis':\n            case 'flex-flow':\n            case 'flex-grow':\n            case 'flex-shrink':\n            case 'flex-wrap':\n            case 'justify-content':\n                target['-webkit-' + key] = value;\n                break;\n            case 'flex-direction':\n                value = value || 'row';\n                target['-webkit-flex-direction'] = value;\n                target['flex-direction'] = value;\n                break;\n            case 'order':\n                target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n                break;\n        }\n    }\n    return target;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/style-utils/style-utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass StyleUtils {\n    /**\n     * @param {?} _serverStylesheet\n     * @param {?} _serverModuleLoaded\n     * @param {?} _platformId\n     * @param {?} layoutConfig\n     */\n    constructor(_serverStylesheet, _serverModuleLoaded, _platformId, layoutConfig) {\n        this._serverStylesheet = _serverStylesheet;\n        this._serverModuleLoaded = _serverModuleLoaded;\n        this._platformId = _platformId;\n        this.layoutConfig = layoutConfig;\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive element\n     * @param {?} element\n     * @param {?} style\n     * @param {?=} value\n     * @return {?}\n     */\n    applyStyleToElement(element, style, value = null) {\n        /** @type {?} */\n        let styles = {};\n        if (typeof style === 'string') {\n            styles[style] = value;\n            style = styles;\n        }\n        styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n        this._applyMultiValueStyleToElement(styles, element);\n    }\n    /**\n     * Applies styles given via string pair or object map to the directive's element\n     * @param {?} style\n     * @param {?=} elements\n     * @return {?}\n     */\n    applyStyleToElements(style, elements = []) {\n        /** @type {?} */\n        const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n        elements.forEach((/**\n         * @param {?} el\n         * @return {?}\n         */\n        el => {\n            this._applyMultiValueStyleToElement(styles, el);\n        }));\n    }\n    /**\n     * Determine the DOM element's Flexbox flow (flex-direction)\n     *\n     * Check inline style first then check computed (stylesheet) style\n     * @param {?} target\n     * @return {?}\n     */\n    getFlowDirection(target) {\n        /** @type {?} */\n        const query = 'flex-direction';\n        /** @type {?} */\n        let value = this.lookupStyle(target, query);\n        /** @type {?} */\n        const hasInlineValue = this.lookupInlineStyle(target, query) ||\n            (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n        return [value || 'row', hasInlineValue];\n    }\n    /**\n     * @param {?} target\n     * @return {?}\n     */\n    hasWrap(target) {\n        /** @type {?} */\n        const query = 'flex-wrap';\n        return this.lookupStyle(target, query) === 'wrap';\n    }\n    /**\n     * Find the DOM element's raw attribute value (if any)\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    lookupAttributeValue(element, attribute) {\n        return element.getAttribute(attribute) || '';\n    }\n    /**\n     * Find the DOM element's inline style value (if any)\n     * @param {?} element\n     * @param {?} styleName\n     * @return {?}\n     */\n    lookupInlineStyle(element, styleName) {\n        return isPlatformBrowser(this._platformId) ?\n            element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n    }\n    /**\n     * Determine the inline or inherited CSS style\n     * NOTE: platform-server has no implementation for getComputedStyle\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} inlineOnly\n     * @return {?}\n     */\n    lookupStyle(element, styleName, inlineOnly = false) {\n        /** @type {?} */\n        let value = '';\n        if (element) {\n            /** @type {?} */\n            let immediateValue = value = this.lookupInlineStyle(element, styleName);\n            if (!immediateValue) {\n                if (isPlatformBrowser(this._platformId)) {\n                    if (!inlineOnly) {\n                        value = getComputedStyle(element).getPropertyValue(styleName);\n                    }\n                }\n                else {\n                    if (this._serverModuleLoaded) {\n                        value = this._serverStylesheet.getStyleForElement(element, styleName);\n                    }\n                }\n            }\n        }\n        // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n        //       in which case getComputedStyle() should determine a valid value.\n        return value ? value.trim() : '';\n    }\n    /**\n     * Applies the styles to the element. The styles object map may contain an array of values\n     * Each value will be added as element style\n     * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n     * @private\n     * @param {?} styles\n     * @param {?} element\n     * @return {?}\n     */\n    _applyMultiValueStyleToElement(styles, element) {\n        Object.keys(styles).sort().forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            /** @type {?} */\n            const el = styles[key];\n            /** @type {?} */\n            const values = Array.isArray(el) ? el : [el];\n            values.sort();\n            for (let value of values) {\n                value = value ? value + '' : '';\n                if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n                    isPlatformBrowser(this._platformId) ?\n                        element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n                }\n                else {\n                    this._serverStylesheet.addStyleToElement(element, key, value);\n                }\n            }\n        }));\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n    _setServerStyle(element, styleName, styleValue) {\n        styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n        /** @type {?} */\n        const styleMap = this._readStyleAttribute(element);\n        styleMap[styleName] = styleValue || '';\n        this._writeStyleAttribute(element, styleMap);\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} styleName\n     * @return {?}\n     */\n    _getServerStyle(element, styleName) {\n        /** @type {?} */\n        const styleMap = this._readStyleAttribute(element);\n        return styleMap[styleName] || '';\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _readStyleAttribute(element) {\n        /** @type {?} */\n        const styleMap = {};\n        /** @type {?} */\n        const styleAttribute = element.getAttribute('style');\n        if (styleAttribute) {\n            /** @type {?} */\n            const styleList = styleAttribute.split(/;+/g);\n            for (let i = 0; i < styleList.length; i++) {\n                /** @type {?} */\n                const style = styleList[i].trim();\n                if (style.length > 0) {\n                    /** @type {?} */\n                    const colonIndex = style.indexOf(':');\n                    if (colonIndex === -1) {\n                        throw new Error(`Invalid CSS style: ${style}`);\n                    }\n                    /** @type {?} */\n                    const name = style.substr(0, colonIndex).trim();\n                    styleMap[name] = style.substr(colonIndex + 1).trim();\n                }\n            }\n        }\n        return styleMap;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} styleMap\n     * @return {?}\n     */\n    _writeStyleAttribute(element, styleMap) {\n        /** @type {?} */\n        let styleAttrValue = '';\n        for (const key in styleMap) {\n            /** @type {?} */\n            const newValue = styleMap[key];\n            if (newValue) {\n                styleAttrValue += key + ':' + styleMap[key] + ';';\n            }\n        }\n        element.setAttribute('style', styleAttrValue);\n    }\n}\nStyleUtils.ɵfac = function StyleUtils_Factory(t) { return new (t || StyleUtils)(ɵngcc0.ɵɵinject(StylesheetMap), ɵngcc0.ɵɵinject(SERVER_TOKEN), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(LAYOUT_CONFIG)); };\n/** @nocollapse */ StyleUtils.ɵprov = ɵɵdefineInjectable({ factory: function StyleUtils_Factory() { return new StyleUtils(ɵɵinject(StylesheetMap), ɵɵinject(SERVER_TOKEN), ɵɵinject(PLATFORM_ID), ɵɵinject(LAYOUT_CONFIG)); }, token: StyleUtils, providedIn: \"root\" });\n/** @nocollapse */\nStyleUtils.ctorParameters = () => [\n    { type: StylesheetMap },\n    { type: Boolean, decorators: [{ type: Inject, args: [SERVER_TOKEN,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [LAYOUT_CONFIG,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StyleUtils, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: StylesheetMap }, { type: Boolean, decorators: [{\n                type: Inject,\n                args: [SERVER_TOKEN]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [LAYOUT_CONFIG]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/style-builder/style-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A class that encapsulates CSS style generation for common directives\n * @abstract\n */\nclass StyleBuilder {\n    constructor() {\n        /**\n         * Whether to cache the generated output styles\n         */\n        this.shouldCache = true;\n    }\n    /**\n     * Run a side effect computation given the input string and the computed styles\n     * from the build task and the host configuration object\n     * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n     * @param {?} _input\n     * @param {?} _styles\n     * @param {?=} _parent\n     * @return {?}\n     */\n    sideEffect(_input, _styles, _parent) {\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/basis-validator/basis-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n * @param {?} basis\n * @param {?=} grow\n * @param {?=} shrink\n * @return {?}\n */\nfunction validateBasis(basis, grow = '1', shrink = '1') {\n    /** @type {?} */\n    let parts = [grow, shrink, basis];\n    /** @type {?} */\n    let j = basis.indexOf('calc');\n    if (j > 0) {\n        parts[2] = _validateCalcValue(basis.substring(j).trim());\n        /** @type {?} */\n        let matches = basis.substr(0, j).trim().split(' ');\n        if (matches.length == 2) {\n            parts[0] = matches[0];\n            parts[1] = matches[1];\n        }\n    }\n    else if (j == 0) {\n        parts[2] = _validateCalcValue(basis.trim());\n    }\n    else {\n        /** @type {?} */\n        let matches = basis.split(' ');\n        parts = (matches.length === 3) ? matches : [\n            grow, shrink, basis\n        ];\n    }\n    return parts;\n}\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n * @param {?} calc\n * @return {?}\n */\nfunction _validateCalcValue(calc) {\n    return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/media-marshaller/media-marshaller.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\nclass MediaMarshaller {\n    /**\n     * @param {?} matchMedia\n     * @param {?} breakpoints\n     * @param {?} hook\n     */\n    constructor(matchMedia, breakpoints, hook) {\n        this.matchMedia = matchMedia;\n        this.breakpoints = breakpoints;\n        this.hook = hook;\n        this.activatedBreakpoints = [];\n        this.elementMap = new Map();\n        this.elementKeyMap = new WeakMap();\n        this.watcherMap = new WeakMap(); // special triggers to update elements\n        // special triggers to update elements\n        this.updateMap = new WeakMap(); // callback functions to update styles\n        // callback functions to update styles\n        this.clearMap = new WeakMap(); // callback functions to clear styles\n        // callback functions to clear styles\n        this.subject = new Subject();\n        this.observeActivations();\n    }\n    /**\n     * @return {?}\n     */\n    get activatedAlias() {\n        return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n    }\n    /**\n     * Update styles on breakpoint activates or deactivates\n     * @param {?} mc\n     * @return {?}\n     */\n    onMediaChange(mc) {\n        /** @type {?} */\n        const bp = this.findByQuery(mc.mediaQuery);\n        if (bp) {\n            mc = mergeAlias(mc, bp);\n            if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n                this.activatedBreakpoints.push(bp);\n                this.activatedBreakpoints.sort(sortDescendingPriority);\n                this.updateStyles();\n            }\n            else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n                // Remove the breakpoint when it's deactivated\n                this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n                this.activatedBreakpoints.sort(sortDescendingPriority);\n                this.updateStyles();\n            }\n        }\n    }\n    /**\n     * initialize the marshaller with necessary elements for delegation on an element\n     * @param {?} element\n     * @param {?} key\n     * @param {?=} updateFn optional callback so that custom bp directives don't have to re-provide this\n     * @param {?=} clearFn optional callback so that custom bp directives don't have to re-provide this\n     * @param {?=} extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n     * @return {?}\n     */\n    init(element, key, updateFn, clearFn, extraTriggers = []) {\n        initBuilderMap(this.updateMap, element, key, updateFn);\n        initBuilderMap(this.clearMap, element, key, clearFn);\n        this.buildElementKeyMap(element, key);\n        this.watchExtraTriggers(element, key, extraTriggers);\n    }\n    /**\n     * get the value for an element and key and optionally a given breakpoint\n     * @param {?} element\n     * @param {?} key\n     * @param {?=} bp\n     * @return {?}\n     */\n    getValue(element, key, bp) {\n        /** @type {?} */\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            /** @type {?} */\n            const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n            if (values) {\n                return values.get(key);\n            }\n        }\n        return undefined;\n    }\n    /**\n     * whether the element has values for a given key\n     * @param {?} element\n     * @param {?} key\n     * @return {?}\n     */\n    hasValue(element, key) {\n        /** @type {?} */\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            /** @type {?} */\n            const values = this.getActivatedValues(bpMap, key);\n            if (values) {\n                return values.get(key) !== undefined || false;\n            }\n        }\n        return false;\n    }\n    /**\n     * Set the value for an input on a directive\n     * @param {?} element the element in question\n     * @param {?} key the type of the directive (e.g. flex, layout-gap, etc)\n     * @param {?} val the value for the breakpoint\n     * @param {?} bp the breakpoint suffix (empty string = default)\n     * @return {?}\n     */\n    setValue(element, key, val, bp) {\n        /** @type {?} */\n        let bpMap = this.elementMap.get(element);\n        if (!bpMap) {\n            bpMap = new Map().set(bp, new Map().set(key, val));\n            this.elementMap.set(element, bpMap);\n        }\n        else {\n            /** @type {?} */\n            const values = (bpMap.get(bp) || new Map()).set(key, val);\n            bpMap.set(bp, values);\n            this.elementMap.set(element, bpMap);\n        }\n        /** @type {?} */\n        const value = this.getValue(element, key);\n        if (value !== undefined) {\n            this.updateElement(element, key, value);\n        }\n    }\n    /**\n     * Track element value changes for a specific key\n     * @param {?} element\n     * @param {?} key\n     * @return {?}\n     */\n    trackValue(element, key) {\n        return this.subject\n            .asObservable()\n            .pipe(filter((/**\n         * @param {?} v\n         * @return {?}\n         */\n        v => v.element === element && v.key === key)));\n    }\n    /**\n     * update all styles for all elements on the current breakpoint\n     * @return {?}\n     */\n    updateStyles() {\n        this.elementMap.forEach((/**\n         * @param {?} bpMap\n         * @param {?} el\n         * @return {?}\n         */\n        (bpMap, el) => {\n            /** @type {?} */\n            const keyMap = new Set((/** @type {?} */ (this.elementKeyMap.get(el))));\n            /** @type {?} */\n            let valueMap = this.getActivatedValues(bpMap);\n            if (valueMap) {\n                valueMap.forEach((/**\n                 * @param {?} v\n                 * @param {?} k\n                 * @return {?}\n                 */\n                (v, k) => {\n                    this.updateElement(el, k, v);\n                    keyMap.delete(k);\n                }));\n            }\n            keyMap.forEach((/**\n             * @param {?} k\n             * @return {?}\n             */\n            k => {\n                valueMap = this.getActivatedValues(bpMap, k);\n                if (valueMap) {\n                    /** @type {?} */\n                    const value = valueMap.get(k);\n                    this.updateElement(el, k, value);\n                }\n                else {\n                    this.clearElement(el, k);\n                }\n            }));\n        }));\n    }\n    /**\n     * clear the styles for a given element\n     * @param {?} element\n     * @param {?} key\n     * @return {?}\n     */\n    clearElement(element, key) {\n        /** @type {?} */\n        const builders = this.clearMap.get(element);\n        if (builders) {\n            /** @type {?} */\n            const clearFn = (/** @type {?} */ (builders.get(key)));\n            if (!!clearFn) {\n                clearFn();\n                this.subject.next({ element, key, value: '' });\n            }\n        }\n    }\n    /**\n     * update a given element with the activated values for a given key\n     * @param {?} element\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    updateElement(element, key, value) {\n        /** @type {?} */\n        const builders = this.updateMap.get(element);\n        if (builders) {\n            /** @type {?} */\n            const updateFn = (/** @type {?} */ (builders.get(key)));\n            if (!!updateFn) {\n                updateFn(value);\n                this.subject.next({ element, key, value });\n            }\n        }\n    }\n    /**\n     * release all references to a given element\n     * @param {?} element\n     * @return {?}\n     */\n    releaseElement(element) {\n        /** @type {?} */\n        const watcherMap = this.watcherMap.get(element);\n        if (watcherMap) {\n            watcherMap.forEach((/**\n             * @param {?} s\n             * @return {?}\n             */\n            s => s.unsubscribe()));\n            this.watcherMap.delete(element);\n        }\n        /** @type {?} */\n        const elementMap = this.elementMap.get(element);\n        if (elementMap) {\n            elementMap.forEach((/**\n             * @param {?} _\n             * @param {?} s\n             * @return {?}\n             */\n            (_, s) => elementMap.delete(s)));\n            this.elementMap.delete(element);\n        }\n    }\n    /**\n     * trigger an update for a given element and key (e.g. layout)\n     * @param {?} element\n     * @param {?=} key\n     * @return {?}\n     */\n    triggerUpdate(element, key) {\n        /** @type {?} */\n        const bpMap = this.elementMap.get(element);\n        if (bpMap) {\n            /** @type {?} */\n            const valueMap = this.getActivatedValues(bpMap, key);\n            if (valueMap) {\n                if (key) {\n                    this.updateElement(element, key, valueMap.get(key));\n                }\n                else {\n                    valueMap.forEach((/**\n                     * @param {?} v\n                     * @param {?} k\n                     * @return {?}\n                     */\n                    (v, k) => this.updateElement(element, k, v)));\n                }\n            }\n        }\n    }\n    /**\n     * Cross-reference for HTMLElement with directive key\n     * @private\n     * @param {?} element\n     * @param {?} key\n     * @return {?}\n     */\n    buildElementKeyMap(element, key) {\n        /** @type {?} */\n        let keyMap = this.elementKeyMap.get(element);\n        if (!keyMap) {\n            keyMap = new Set();\n            this.elementKeyMap.set(element, keyMap);\n        }\n        keyMap.add(key);\n    }\n    /**\n     * Other triggers that should force style updates:\n     * - directionality\n     * - layout changes\n     * - mutationobserver updates\n     * @private\n     * @param {?} element\n     * @param {?} key\n     * @param {?} triggers\n     * @return {?}\n     */\n    watchExtraTriggers(element, key, triggers) {\n        if (triggers && triggers.length) {\n            /** @type {?} */\n            let watchers = this.watcherMap.get(element);\n            if (!watchers) {\n                watchers = new Map();\n                this.watcherMap.set(element, watchers);\n            }\n            /** @type {?} */\n            const subscription = watchers.get(key);\n            if (!subscription) {\n                /** @type {?} */\n                const newSubscription = merge(...triggers).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    /** @type {?} */\n                    const currentValue = this.getValue(element, key);\n                    this.updateElement(element, key, currentValue);\n                }));\n                watchers.set(key, newSubscription);\n            }\n        }\n    }\n    /**\n     * Breakpoint locator by mediaQuery\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    findByQuery(query) {\n        return this.breakpoints.findByQuery(query);\n    }\n    /**\n     * get the fallback breakpoint for a given element, starting with the current breakpoint\n     * @private\n     * @param {?} bpMap\n     * @param {?=} key\n     * @return {?}\n     */\n    getActivatedValues(bpMap, key) {\n        for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n            /** @type {?} */\n            const activatedBp = this.activatedBreakpoints[i];\n            /** @type {?} */\n            const valueMap = bpMap.get(activatedBp.alias);\n            if (valueMap) {\n                if (key === undefined || (valueMap.has(key) && valueMap.get(key) != null)) {\n                    return valueMap;\n                }\n            }\n        }\n        /** @type {?} */\n        const lastHope = bpMap.get('');\n        return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n    }\n    /**\n     * Watch for mediaQuery breakpoint activations\n     * @private\n     * @return {?}\n     */\n    observeActivations() {\n        /** @type {?} */\n        const target = (/** @type {?} */ ((/** @type {?} */ (this))));\n        /** @type {?} */\n        const queries = this.breakpoints.items.map((/**\n         * @param {?} bp\n         * @return {?}\n         */\n        bp => bp.mediaQuery));\n        this.matchMedia\n            .observe(this.hook.withPrintQuery(queries))\n            .pipe(tap(this.hook.interceptEvents(target)), filter(this.hook.blockPropagation()))\n            .subscribe(this.onMediaChange.bind(this));\n    }\n}\nMediaMarshaller.ɵfac = function MediaMarshaller_Factory(t) { return new (t || MediaMarshaller)(ɵngcc0.ɵɵinject(MatchMedia), ɵngcc0.ɵɵinject(BreakPointRegistry), ɵngcc0.ɵɵinject(PrintHook)); };\n/** @nocollapse */ MediaMarshaller.ɵprov = ɵɵdefineInjectable({ factory: function MediaMarshaller_Factory() { return new MediaMarshaller(ɵɵinject(MatchMedia), ɵɵinject(BreakPointRegistry), ɵɵinject(PrintHook)); }, token: MediaMarshaller, providedIn: \"root\" });\n/** @nocollapse */\nMediaMarshaller.ctorParameters = () => [\n    { type: MatchMedia },\n    { type: BreakPointRegistry },\n    { type: PrintHook }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MediaMarshaller, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MatchMedia }, { type: BreakPointRegistry }, { type: PrintHook }]; }, null); })();\n/**\n * @param {?} map\n * @param {?} element\n * @param {?} key\n * @param {?=} input\n * @return {?}\n */\nfunction initBuilderMap(map$$1, element, key, input) {\n    if (input !== undefined) {\n        /** @type {?} */\n        let oldMap = map$$1.get(element);\n        if (!oldMap) {\n            oldMap = new Map();\n            map$$1.set(element, oldMap);\n        }\n        oldMap.set(key, input);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: core/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatchMedia as ɵMatchMedia, MockMatchMedia as ɵMockMatchMedia, MockMatchMediaProvider as ɵMockMatchMediaProvider, CoreModule, removeStyles, BROWSER_PROVIDER, CLASS_NAME, MediaChange, StylesheetMap, DEFAULT_CONFIG, LAYOUT_CONFIG, SERVER_TOKEN, BREAKPOINT, mergeAlias, BaseDirective2, DEFAULT_BREAKPOINTS, ScreenTypes, ORIENTATION_BREAKPOINTS, BreakPointRegistry, BREAKPOINTS, MediaObserver, MediaTrigger, sortDescendingPriority, sortAscendingPriority, coerceArray, StyleUtils, StyleBuilder, validateBasis, MediaMarshaller, BREAKPOINT_PRINT, PrintHook };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}