/**
 * @fileoverview added by tsickle
 * Generated from: lib/scope-resolver.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { isScopeObject, toCamelCase } from './helpers';
export class ScopeResolver {
    /**
     * @param {?} translocoService
     */
    constructor(translocoService) {
        this.translocoService = translocoService;
    }
    // inline => provider
    /**
     * @param {?=} __0
     * @return {?}
     */
    resolve({ inline, provider } = { inline: undefined, provider: undefined }) {
        if (inline) {
            return inline;
        }
        if (provider) {
            if (isScopeObject(provider)) {
                const { scope, alias = toCamelCase(scope) } = (/** @type {?} */ (provider));
                this.translocoService._setScopeAlias(scope, alias);
                return scope;
            }
            return (/** @type {?} */ (provider));
        }
        return undefined;
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    ScopeResolver.prototype.translocoService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NvcGUtcmVzb2x2ZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmduZWF0L3RyYW5zbG9jby8iLCJzb3VyY2VzIjpbImxpYi9zY29wZS1yZXNvbHZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLE9BQU8sRUFBRSxhQUFhLEVBQUUsV0FBVyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBT3ZELE1BQU0sT0FBTyxhQUFhOzs7O0lBQ3hCLFlBQW9CLGdCQUFrQztRQUFsQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO0lBQUcsQ0FBQzs7Ozs7O0lBRzFELE9BQU8sQ0FBQyxFQUFFLE1BQU0sRUFBRSxRQUFRLEtBQTBCLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFO1FBQzVGLElBQUksTUFBTSxFQUFFO1lBQ1YsT0FBTyxNQUFNLENBQUM7U0FDZjtRQUVELElBQUksUUFBUSxFQUFFO1lBQ1osSUFBSSxhQUFhLENBQUMsUUFBUSxDQUFDLEVBQUU7c0JBQ3JCLEVBQUUsS0FBSyxFQUFFLEtBQUssR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLEVBQUUsR0FBRyxtQkFBQSxRQUFRLEVBQWlCO2dCQUN2RSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztnQkFDbkQsT0FBTyxLQUFLLENBQUM7YUFDZDtZQUVELE9BQU8sbUJBQUEsUUFBUSxFQUFVLENBQUM7U0FDM0I7UUFFRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0NBQ0Y7Ozs7OztJQXBCYSx5Q0FBMEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUcmFuc2xvY29TY29wZSwgUHJvdmlkZXJTY29wZSwgTWF5YmVBcnJheSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgVHJhbnNsb2NvU2VydmljZSB9IGZyb20gJy4vdHJhbnNsb2NvLnNlcnZpY2UnO1xuaW1wb3J0IHsgaXNTY29wZU9iamVjdCwgdG9DYW1lbENhc2UgfSBmcm9tICcuL2hlbHBlcnMnO1xuXG50eXBlIFNjb3BlUmVzb2x2ZXJQYXJhbXMgPSB7XG4gIGlubGluZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBwcm92aWRlcjogTWF5YmVBcnJheTxUcmFuc2xvY29TY29wZT47XG59O1xuXG5leHBvcnQgY2xhc3MgU2NvcGVSZXNvbHZlciB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdHJhbnNsb2NvU2VydmljZTogVHJhbnNsb2NvU2VydmljZSkge31cblxuICAvLyBpbmxpbmUgPT4gcHJvdmlkZXJcbiAgcmVzb2x2ZSh7IGlubGluZSwgcHJvdmlkZXIgfTogU2NvcGVSZXNvbHZlclBhcmFtcyA9IHsgaW5saW5lOiB1bmRlZmluZWQsIHByb3ZpZGVyOiB1bmRlZmluZWQgfSk6IHN0cmluZyB7XG4gICAgaWYgKGlubGluZSkge1xuICAgICAgcmV0dXJuIGlubGluZTtcbiAgICB9XG5cbiAgICBpZiAocHJvdmlkZXIpIHtcbiAgICAgIGlmIChpc1Njb3BlT2JqZWN0KHByb3ZpZGVyKSkge1xuICAgICAgICBjb25zdCB7IHNjb3BlLCBhbGlhcyA9IHRvQ2FtZWxDYXNlKHNjb3BlKSB9ID0gcHJvdmlkZXIgYXMgUHJvdmlkZXJTY29wZTtcbiAgICAgICAgdGhpcy50cmFuc2xvY29TZXJ2aWNlLl9zZXRTY29wZUFsaWFzKHNjb3BlLCBhbGlhcyk7XG4gICAgICAgIHJldHVybiBzY29wZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHByb3ZpZGVyIGFzIHN0cmluZztcbiAgICB9XG5cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG4iXX0=