/**
 * @fileoverview added by tsickle
 * Generated from: lib/transloco.interceptor.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { InjectionToken } from '@angular/core';
/** @type {?} */
export var TRANSLOCO_INTERCEPTOR = new InjectionToken('TRANSLOCO_INTERCEPTOR');
/**
 * @record
 */
export function TranslocoInterceptor() { }
if (false) {
    /**
     * @param {?} translation
     * @param {?} lang
     * @return {?}
     */
    TranslocoInterceptor.prototype.preSaveTranslation = function (translation, lang) { };
    /**
     * @param {?} key
     * @param {?} value
     * @param {?} lang
     * @return {?}
     */
    TranslocoInterceptor.prototype.preSaveTranslationKey = function (key, value, lang) { };
}
var DefaultInterceptor = /** @class */ (function () {
    function DefaultInterceptor() {
    }
    /**
     * @param {?} translation
     * @param {?} lang
     * @return {?}
     */
    DefaultInterceptor.prototype.preSaveTranslation = /**
     * @param {?} translation
     * @param {?} lang
     * @return {?}
     */
    function (translation, lang) {
        return translation;
    };
    /**
     * @param {?} key
     * @param {?} value
     * @param {?} lang
     * @return {?}
     */
    DefaultInterceptor.prototype.preSaveTranslationKey = /**
     * @param {?} key
     * @param {?} value
     * @param {?} lang
     * @return {?}
     */
    function (key, value, lang) {
        return value;
    };
    return DefaultInterceptor;
}());
export { DefaultInterceptor };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsb2NvLmludGVyY2VwdG9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5nbmVhdC90cmFuc2xvY28vIiwic291cmNlcyI6WyJsaWIvdHJhbnNsb2NvLmludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFHL0MsTUFBTSxLQUFPLHFCQUFxQixHQUFHLElBQUksY0FBYyxDQUFDLHVCQUF1QixDQUFDOzs7O0FBRWhGLDBDQUlDOzs7Ozs7O0lBSEMscUZBQXdFOzs7Ozs7O0lBRXhFLHVGQUF3RTs7QUFHMUU7SUFBQTtJQVFBLENBQUM7Ozs7OztJQVBDLCtDQUFrQjs7Ozs7SUFBbEIsVUFBbUIsV0FBd0IsRUFBRSxJQUFZO1FBQ3ZELE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUM7Ozs7Ozs7SUFFRCxrREFBcUI7Ozs7OztJQUFyQixVQUFzQixHQUFXLEVBQUUsS0FBYSxFQUFFLElBQVk7UUFDNUQsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBQ0gseUJBQUM7QUFBRCxDQUFDLEFBUkQsSUFRQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUcmFuc2xhdGlvbiB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgVFJBTlNMT0NPX0lOVEVSQ0VQVE9SID0gbmV3IEluamVjdGlvblRva2VuKCdUUkFOU0xPQ09fSU5URVJDRVBUT1InKTtcblxuZXhwb3J0IGludGVyZmFjZSBUcmFuc2xvY29JbnRlcmNlcHRvciB7XG4gIHByZVNhdmVUcmFuc2xhdGlvbih0cmFuc2xhdGlvbjogVHJhbnNsYXRpb24sIGxhbmc6IHN0cmluZyk6IFRyYW5zbGF0aW9uO1xuXG4gIHByZVNhdmVUcmFuc2xhdGlvbktleShrZXk6IHN0cmluZywgdmFsdWU6IHN0cmluZywgbGFuZzogc3RyaW5nKTogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgRGVmYXVsdEludGVyY2VwdG9yIGltcGxlbWVudHMgVHJhbnNsb2NvSW50ZXJjZXB0b3Ige1xuICBwcmVTYXZlVHJhbnNsYXRpb24odHJhbnNsYXRpb246IFRyYW5zbGF0aW9uLCBsYW5nOiBzdHJpbmcpOiBUcmFuc2xhdGlvbiB7XG4gICAgcmV0dXJuIHRyYW5zbGF0aW9uO1xuICB9XG5cbiAgcHJlU2F2ZVRyYW5zbGF0aW9uS2V5KGtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nLCBsYW5nOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxufVxuIl19